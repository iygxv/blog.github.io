import{_ as s,c as a,o as n,N as o}from"./chunks/framework.7288ae32.js";const d=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"article/web/javascript/senior/9-JavaScript 侦测手机浏览器的五种方法.md"}'),l={name:"article/web/javascript/senior/9-JavaScript 侦测手机浏览器的五种方法.md"},p=o(`<p><a href="https://www.ruanyifeng.com/blog/2021/09/detecting-mobile-browser.html" target="_blank" rel="noreferrer">阮一峰</a></p><h2 id="一、navigator-useragent" tabindex="-1">一、navigator.userAgent <a class="header-anchor" href="#一、navigator-useragent" aria-label="Permalink to &quot;一、navigator.userAgent&quot;">​</a></h2><p>最简单的方法就是分析浏览器的 user agent 字符串，它包含了设备信息。</p><p>JS 通过<code>navigator.userAgent</code>属性拿到这个字符串，只要里面包含<code>mobi</code>、<code>android</code>、<code>iphone</code>等关键字，就可以认定是移动设备。</p><blockquote><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#A6ACCD;"> (</span><span style="color:#89DDFF;">/</span><span style="color:#C3E88D;">Mobi</span><span style="color:#89DDFF;">|</span><span style="color:#C3E88D;">Android</span><span style="color:#89DDFF;">|</span><span style="color:#C3E88D;">iPhone</span><span style="color:#89DDFF;">/</span><span style="color:#F78C6C;">i</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">test</span><span style="color:#A6ACCD;">(navigator</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">userAgent)) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">// 当前设备是移动设备</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 另一种写法</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#A6ACCD;"> (</span></span>
<span class="line"><span style="color:#A6ACCD;">  navigator</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">userAgent</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">match</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">/</span><span style="color:#C3E88D;">Mobi</span><span style="color:#89DDFF;">/</span><span style="color:#F78C6C;">i</span><span style="color:#A6ACCD;">) </span><span style="color:#89DDFF;">||</span></span>
<span class="line"><span style="color:#A6ACCD;">  navigator</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">userAgent</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">match</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">/</span><span style="color:#C3E88D;">Android</span><span style="color:#89DDFF;">/</span><span style="color:#F78C6C;">i</span><span style="color:#A6ACCD;">) </span><span style="color:#89DDFF;">||</span></span>
<span class="line"><span style="color:#A6ACCD;">  navigator</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">userAgent</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">match</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">/</span><span style="color:#C3E88D;">iPhone</span><span style="color:#89DDFF;">/</span><span style="color:#F78C6C;">i</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">// 当前设备是移动设备</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div></blockquote><p>这种方法的优点是简单方便，缺点是不可靠，因为用户可以修改这个字符串，让手机浏览器伪装成桌面浏览器。</p><p>Chromium 系的浏览器，还有一个<code>navigator.userAgentData</code>属性，也是类似的作用。不同之处是它将 user agent 字符串解析为一个对象，该对象的<code>mobile</code>属性，返回一个布尔值，表示用户是否使用移动设备。</p><blockquote><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> isMobile </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> navigator</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">userAgentData</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">mobile</span><span style="color:#89DDFF;">;</span></span></code></pre></div></blockquote><p>注意，苹果的 Safari 浏览器和 Firefox 浏览器都不支持这个属性，具体情况可以查看 <a href="https://caniuse.com/mdn-api_navigator_useragentdata" target="_blank" rel="noreferrer">Caniuse 网站</a>。</p><p>此外，还有一个已经废除的<a href="https://stackoverflow.com/questions/19877924/what-is-the-list-of-possible-values-for-navigator-platform-as-of-today" target="_blank" rel="noreferrer"><code>navigator.platform</code>属性</a>，所有浏览器都支持，所以也可以用。它返回一个字符串，表示用户的操作系统。</p><blockquote><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#A6ACCD;"> (</span><span style="color:#89DDFF;">/</span><span style="color:#C3E88D;">Android</span><span style="color:#89DDFF;">|</span><span style="color:#C3E88D;">iPhone</span><span style="color:#89DDFF;">|</span><span style="color:#C3E88D;">iPad</span><span style="color:#89DDFF;">|</span><span style="color:#C3E88D;">iPod</span><span style="color:#89DDFF;">/</span><span style="color:#F78C6C;">i</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">test</span><span style="color:#A6ACCD;">(navigator</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">platform)) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">// 当前设备是移动设备</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div></blockquote><h2 id="二、window-screen-window-innerwidth" tabindex="-1">二、window.screen，window.innerWidth <a class="header-anchor" href="#二、window-screen-window-innerwidth" aria-label="Permalink to &quot;二、window.screen，window.innerWidth&quot;">​</a></h2><p>另一种方法是通过屏幕宽度，判断是否为手机。</p><p><code>window.screen</code>对象返回用户设备的屏幕信息，该对象的<code>width</code>属性是屏幕宽度（单位为像素）。</p><blockquote><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#A6ACCD;"> (window</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">screen</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">width </span><span style="color:#89DDFF;">&lt;</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">500</span><span style="color:#A6ACCD;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">// 当前设备是移动设备 </span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div></blockquote><p>上面示例中，如果屏幕宽度<code>window.screen.width</code>小于500像素，就认为是手机。</p><p>这个方法的缺点在于，如果手机横屏使用，就识别不了。</p><p>另一个属性<code>window.innerWidth</code>返回浏览器窗口里面的网页可见部分的宽度，比较适合指定网页在不同宽度下的样式。</p><blockquote><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> getBrowserWidth </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">function</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#F07178;"> (</span><span style="color:#A6ACCD;">window</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">innerWidth</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">768</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">xs</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;font-style:italic;">else</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#F07178;"> (</span><span style="color:#A6ACCD;">window</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">innerWidth</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">991</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">sm</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;font-style:italic;">else</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#F07178;"> (</span><span style="color:#A6ACCD;">window</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">innerWidth</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">1199</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">md</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;font-style:italic;">else</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">lg</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">};</span></span></code></pre></div></blockquote><h2 id="三、window-orientation" tabindex="-1">三、window.orientation <a class="header-anchor" href="#三、window-orientation" aria-label="Permalink to &quot;三、window.orientation&quot;">​</a></h2><p>第三种方法是侦测屏幕方向，手机屏幕可以随时改变方向（横屏或竖屏），桌面设备做不到。</p><p><code>window.orientation</code>属性用于获取屏幕的当前方向，只有移动设备才有这个属性，桌面设备会返回<code>undefined</code>。</p><blockquote><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#A6ACCD;"> (</span><span style="color:#89DDFF;">typeof</span><span style="color:#A6ACCD;"> window</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">orientation </span><span style="color:#89DDFF;">!==</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">undefined</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">// 当前设备是移动设备 </span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div></blockquote><p>注意，iPhone 的 Safari 浏览器不支持该属性。</p><h2 id="四、touch-事件" tabindex="-1">四、touch 事件 <a class="header-anchor" href="#四、touch-事件" aria-label="Permalink to &quot;四、touch 事件&quot;">​</a></h2><p>第四种方法是，手机浏览器的 DOM 元素可以通过<code>ontouchstart</code>属性，为<code>touch</code>事件指定监听函数。桌面设备没有这个属性。</p><blockquote><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">isMobile</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> (</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">ontouchstart</span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">in</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">document</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">documentElement</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span><span style="color:#F07178;"> </span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 另一种写法</span></span>
<span class="line"><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">isMobile</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;font-style:italic;">try</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#A6ACCD;">document</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">createEvent</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">TouchEvent</span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#FF9CAC;">true</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;font-style:italic;">catch</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">e</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#FF9CAC;">false</span><span style="color:#89DDFF;">;</span><span style="color:#F07178;"> </span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div></blockquote><h2 id="五、window-matchmedia" tabindex="-1">五、window.matchMedia() <a class="header-anchor" href="#五、window-matchmedia" aria-label="Permalink to &quot;五、window.matchMedia()&quot;">​</a></h2><p>最后一种方法是结合 CSS 来判断。</p><p>CSS 通过 media query（媒介查询）为网页指定响应式样式。如果某个针对手机的 media query 语句生效了，就可以认为当前设备是移动设备。</p><p><code>window.matchMedia()</code>方法接受一个 CSS 的 media query 语句作为参数，判断这个语句是否生效。</p><blockquote><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> isMobile </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> window</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">matchMedia</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">only screen and (max-width: 760px)</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">matches</span><span style="color:#89DDFF;">;</span></span></code></pre></div></blockquote><p>上面示例中，<code>window.matchMedia()</code>的参数是一个 CSS 查询语句，表示只对屏幕宽度不超过 700 像素的设备生效。它返回一个对象，该对象的<code>matches</code>属性是一个布尔值。如果是<code>true</code>，就表示查询生效，当前设备是手机。</p><p>除了通过屏幕宽度判断，还可以通过指针的精确性判断。</p><blockquote><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> isMobile </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> window</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">matchMedia</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">(pointer:coarse)</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">matches</span><span style="color:#89DDFF;">;</span></span></code></pre></div></blockquote><p>上面示例中，CSS 语句<code>pointer:coarse</code>表示当前设备的指针是不精确的。由于手机不支持鼠标，只支持触摸，所以符合这个条件。</p><p>有些设备支持多种指针，比如同时支持鼠标和触摸。<code>pointer:coarse</code>只用来判断主指针，此外还有一个<code>any-pointer</code>命令判断所有指针。</p><blockquote><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> isMobile </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> window</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">matchMedia</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">(any-pointer:coarse)</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">matches</span><span style="color:#89DDFF;">;</span></span></code></pre></div></blockquote><p>上面示例中，<code>any-pointer:coarse</code>表示所有指针里面，只要有一个指针是不精确的，就符合查询条件。</p><h2 id="六、工具包" tabindex="-1">六、工具包 <a class="header-anchor" href="#六、工具包" aria-label="Permalink to &quot;六、工具包&quot;">​</a></h2><p>除了上面这些方法，也可以使用别人写好的工具包。这里推荐 <a href="https://www.npmjs.com/package/react-device-detect" target="_blank" rel="noreferrer">react-device-detect</a>，它支持多种粒度的设备侦测。</p><blockquote><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;">isMobile</span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">react-device-detect</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#A6ACCD;"> (isMobile) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">// 当前设备是移动设备</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div></blockquote>`,42),e=[p];function t(c,r,i,D,y,F){return n(),a("div",null,e)}const A=s(l,[["render",t]]);export{d as __pageData,A as default};
