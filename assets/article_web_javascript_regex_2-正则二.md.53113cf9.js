import{_ as s,c as a,o as n,a as l}from"./app.472a3350.js";const p="/blog_static/assets/20201223173433490.2d6cdcb5.png",u=JSON.parse('{"title":"从零开始学正则（二），正则表达式位置匹配攻略","description":"","frontmatter":{},"headers":[{"level":2,"title":"1 .正则表达式位置匹配攻略","slug":"_1-正则表达式位置匹配攻略","link":"#_1-正则表达式位置匹配攻略","children":[]},{"level":2,"title":"1.1. 什么是位置呢？","slug":"_1-1-什么是位置呢","link":"#_1-1-什么是位置呢","children":[]},{"level":2,"title":"1.2. 如何匹配位置呢？","slug":"_1-2-如何匹配位置呢","link":"#_1-2-如何匹配位置呢","children":[]},{"level":2,"title":"1.3. 位置的特性","slug":"_1-3-位置的特性","link":"#_1-3-位置的特性","children":[]},{"level":2,"title":"1.4. 相关案例","slug":"_1-4-相关案例","link":"#_1-4-相关案例","children":[]}],"relativePath":"article/web/javascript/regex/2-正则二.md"}'),o={name:"article/web/javascript/regex/2-正则二.md"},t=l('<h1 id="从零开始学正则-二-正则表达式位置匹配攻略" tabindex="-1">从零开始学正则（二），正则表达式位置匹配攻略 <a class="header-anchor" href="#从零开始学正则-二-正则表达式位置匹配攻略" aria-hidden="true">#</a></h1><h2 id="_1-正则表达式位置匹配攻略" tabindex="-1">1 .正则表达式位置匹配攻略 <a class="header-anchor" href="#_1-正则表达式位置匹配攻略" aria-hidden="true">#</a></h2><p>正则表达式是匹配模式，要么匹配字符，要么匹配位置。请记住这句话。然而大部分人学习正则时，对于匹配位置的重视程度没有那么高。本章讲讲正则匹配位置的相关知识点。 内容包括：</p><ul><li>什么是位置？</li><li>如何匹配位置？</li><li>位置的特性</li><li>几个应用实例分析</li></ul><h2 id="_1-1-什么是位置呢" tabindex="-1">1.1. 什么是位置呢？ <a class="header-anchor" href="#_1-1-什么是位置呢" aria-hidden="true">#</a></h2><p>位置（锚）是相邻字符之间的位置。比如，下图中箭头所指的地方： <img src="'+p+`" alt="在这里插入图片描述"></p><h2 id="_1-2-如何匹配位置呢" tabindex="-1">1.2. 如何匹配位置呢？ <a class="header-anchor" href="#_1-2-如何匹配位置呢" aria-hidden="true">#</a></h2><p>在 ES5 中，共有 6 个锚： ^、$、\\b、\\B、(?=p)、(?!p)</p><h5 id="_1-2-1-和" tabindex="-1">1.2.1. ^ 和 $ <a class="header-anchor" href="#_1-2-1-和" aria-hidden="true">#</a></h5><p>^（脱字符）匹配开头，在多行匹配中匹配行开头。 $（美元符号）匹配结尾，在多行匹配中匹配行结尾。 比如我们把字符串的开头和结尾用 &quot;#&quot; 替换（位置可以替换成字符的！）：</p><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#C792EA;">var</span><span style="color:#A6ACCD;"> result </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">guxin</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">replace</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">/</span><span style="color:#89DDFF;font-style:italic;">^</span><span style="color:#89DDFF;">|</span><span style="color:#89DDFF;font-style:italic;">$</span><span style="color:#89DDFF;">/</span><span style="color:#F78C6C;">g</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">#</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(result)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// =&gt; &quot;#guxin#</span></span>
<span class="line"></span></code></pre></div><p><strong>多行匹配模式（即有修饰符 m</strong>）时，二者是行的概念，这一点需要我们注意：</p><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#C792EA;">var</span><span style="color:#A6ACCD;"> result </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">guxin</span><span style="color:#A6ACCD;">\\n</span><span style="color:#C3E88D;">guxinxin</span><span style="color:#A6ACCD;">\\n</span><span style="color:#C3E88D;">guxinya</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">replace</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">/</span><span style="color:#89DDFF;font-style:italic;">^</span><span style="color:#89DDFF;">|</span><span style="color:#89DDFF;font-style:italic;">$</span><span style="color:#89DDFF;">/</span><span style="color:#F78C6C;">gm</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">#</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(result)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">/*</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">#guxin#</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">#guxinxin#</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">#guxinya#</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">*/</span></span>
<span class="line"></span></code></pre></div><h5 id="_1-2-2-b-和-b" tabindex="-1">1.2.2. \\b 和 \\B <a class="header-anchor" href="#_1-2-2-b-和-b" aria-hidden="true">#</a></h5><p>\\b 是单词边界，具体就是 \\w 与 \\W 之间的位置，也包括 \\w 与 ^ 之间的位置，和 \\w 与 $ 之间的位置。</p><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#C792EA;">var</span><span style="color:#A6ACCD;"> result </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">[I] am guxin xi_xixi</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">replace</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">/</span><span style="color:#89DDFF;font-style:italic;">\\b</span><span style="color:#89DDFF;">/</span><span style="color:#F78C6C;">g</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">#</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(result)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// =&gt; &quot;[#I#] #am# #guxin# #xi_xixi#&quot;</span></span>
<span class="line"></span></code></pre></div><p>\\B 就是 \\b 的反面的意思，非单词边界。例如在字符串中所有位置中，扣掉 \\b，剩下的都是 \\B 的。 具体说来就是 \\w 与 \\w、 \\W 与 \\W、^ 与 \\W，\\W 与 $ 之间的位置。</p><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#C792EA;">var</span><span style="color:#A6ACCD;"> result </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">[I] am guxin xi_xixi</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">replace</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">/</span><span style="color:#89DDFF;font-style:italic;">\\B</span><span style="color:#89DDFF;">/</span><span style="color:#F78C6C;">g</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">#</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(result)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// =&gt; &quot;#[I]# a#m g#u#x#i#n x#i#_#x#i#x#i&quot;</span></span>
<span class="line"></span></code></pre></div><h5 id="_1-2-3-p-和-p" tabindex="-1">1.2.3. (?=p) 和 (?!p) <a class="header-anchor" href="#_1-2-3-p-和-p" aria-hidden="true">#</a></h5><p>(?=p)，其中 p 是一个子模式，即 p 前面的位置，或者说，该位置后面的字符要匹配 p。 比如 (?=l)，表示 &quot;l&quot; 字符前面的位置，例如</p><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#C792EA;">var</span><span style="color:#A6ACCD;"> result </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">helloguxin</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">replace</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">/(?=</span><span style="color:#C3E88D;">guxin</span><span style="color:#89DDFF;">)/</span><span style="color:#F78C6C;">g</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">#</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(result)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// =&gt; &quot;hello#guxin</span></span>
<span class="line"></span></code></pre></div><p>而 (?!p) 就是 (?=p) 的反面意思，比如：</p><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">//不在guxin前面加,其他之间加</span></span>
<span class="line"><span style="color:#C792EA;">var</span><span style="color:#A6ACCD;"> result </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">helloguxin</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">replace</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">/(?!</span><span style="color:#C3E88D;">guxin</span><span style="color:#89DDFF;">)/</span><span style="color:#F78C6C;">g</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">#</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(result)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// =&gt; &quot;#h#e#l#l#og#u#x#i#n#&quot;</span></span>
<span class="line"></span></code></pre></div><h2 id="_1-3-位置的特性" tabindex="-1">1.3. 位置的特性 <a class="header-anchor" href="#_1-3-位置的特性" aria-hidden="true">#</a></h2><p>对于位置的理解，我们可以理解成空字符 &quot;&quot;。 比如 &quot;hello&quot; 字符串等价于如下的形式：</p><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">hello</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">==</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;&quot;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">+</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">h</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">+</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;&quot;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">+</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">e</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">+</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;&quot;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">+</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">l</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">+</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;&quot;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">+</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">l</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">+</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;&quot;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">+</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">o</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">+</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;&quot;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre></div><p>也等价于：</p><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">hello</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">==</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;&quot;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">+</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;&quot;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">+</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">hello</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"></span></code></pre></div><p>因此，把 /^hello $ / 写成 /^^hello$$$/，是没有任何问题的：</p><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#C792EA;">var</span><span style="color:#A6ACCD;"> result </span><span style="color:#89DDFF;">=</span><span style="color:#C3E88D;"> </span><span style="color:#89DDFF;">/</span><span style="color:#89DDFF;font-style:italic;">^^</span><span style="color:#C3E88D;">hello</span><span style="color:#89DDFF;font-style:italic;">$$$</span><span style="color:#89DDFF;">/</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">test</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">hello</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(result)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// =&gt; true</span></span>
<span class="line"></span></code></pre></div><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#C792EA;">var</span><span style="color:#A6ACCD;"> result </span><span style="color:#89DDFF;">=</span><span style="color:#C3E88D;"> </span><span style="color:#89DDFF;">/(?=</span><span style="color:#C3E88D;">he</span><span style="color:#89DDFF;">)</span><span style="color:#89DDFF;font-style:italic;">^^</span><span style="color:#C3E88D;">he</span><span style="color:#89DDFF;">(?=</span><span style="color:#C3E88D;">\\w</span><span style="color:#89DDFF;">)</span><span style="color:#C3E88D;">llo</span><span style="color:#89DDFF;font-style:italic;">$\\b\\b$</span><span style="color:#89DDFF;">/</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">test</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">hello</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(result)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// =&gt; true</span></span>
<span class="line"></span></code></pre></div><p>也就是说字符之间的位置，可以写成多个。</p><h2 id="_1-4-相关案例" tabindex="-1">1.4. 相关案例 <a class="header-anchor" href="#_1-4-相关案例" aria-hidden="true">#</a></h2><h5 id="_1-4-1-不匹配任何东西的正则" tabindex="-1">1.4.1. 不匹配任何东西的正则 <a class="header-anchor" href="#_1-4-1-不匹配任何东西的正则" aria-hidden="true">#</a></h5><p>让你写个正则不匹配任何东西</p><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#A6ACCD;">easy，</span><span style="color:#89DDFF;">/</span><span style="color:#C3E88D;">.</span><span style="color:#89DDFF;font-style:italic;">^</span><span style="color:#89DDFF;">/</span></span>
<span class="line"></span></code></pre></div><p>因为此正则要求只有一个字符，但该字符后面是开头，而这样的字符串是不存在的</p><h5 id="_1-4-2-数字的千位分隔符表示法" tabindex="-1">1.4.2 数字的千位分隔符表示法 <a class="header-anchor" href="#_1-4-2-数字的千位分隔符表示法" aria-hidden="true">#</a></h5><p>比如把 &quot;12345678&quot;，变成 &quot;12,345,678&quot;。 可见是需要把相应的位置替换成 &quot;,&quot;。 思路是什么呢?</p><p>首先弄出最后一个逗号 使用 (?=\\d{3}$) 就可以做到：</p><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#C792EA;">var</span><span style="color:#A6ACCD;"> result </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">12345678</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">replace</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">/(?=</span><span style="color:#C3E88D;">\\d</span><span style="color:#89DDFF;">{3}</span><span style="color:#89DDFF;font-style:italic;">$</span><span style="color:#89DDFF;">)/</span><span style="color:#F78C6C;">g</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">,</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(result)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// =&gt; &quot;12345,678</span></span>
<span class="line"></span></code></pre></div><p>其中，(?=\\d{3}$) 匹配 \\d{3} $ 前面的位置。而 \\d{3}$ 匹配的是目标字符串最后那 3 位数字。</p><p>然后弄出所有的逗号 因为逗号出现的位置，要求后面 3 个数字一组，也就是 \\d{3} 至少出现一次。 此时可以使用量词 +：</p><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#C792EA;">var</span><span style="color:#A6ACCD;"> result </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">12345678</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">replace</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">/(?=(</span><span style="color:#C3E88D;">\\d</span><span style="color:#89DDFF;">{3})+</span><span style="color:#89DDFF;font-style:italic;">$</span><span style="color:#89DDFF;">)/</span><span style="color:#F78C6C;">g</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">,</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(result)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// =&gt; &quot;12,345,678&quot;</span></span>
<span class="line"></span></code></pre></div><h5 id="_1-4-3-匹配其余案例" tabindex="-1">1.4.3. 匹配其余案例 <a class="header-anchor" href="#_1-4-3-匹配其余案例" aria-hidden="true">#</a></h5><p>写完正则后，要多验证几个案例，此时我们会发现问题：</p><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#C792EA;">var</span><span style="color:#A6ACCD;"> result </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">123456789</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">replace</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">/(?=(</span><span style="color:#C3E88D;">\\d</span><span style="color:#89DDFF;">{3})+</span><span style="color:#89DDFF;font-style:italic;">$</span><span style="color:#89DDFF;">)/</span><span style="color:#F78C6C;">g</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">,</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(result)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// =&gt; &quot;,123,456,789&quot;</span></span>
<span class="line"></span></code></pre></div><p>因为上面的正则，仅仅表示把从结尾向前数，一但是 3 的倍数，就把其前面的位置替换成逗号。因此才会出 现这个问题。 怎么解决呢？我们要求匹配的到这个位置不能是开头。 我们知道匹配开头可以使用 ^，但要求这个位置不是开头怎么办？ easy，(?!^)，你想到了吗？测试如下：</p><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#C792EA;">var</span><span style="color:#A6ACCD;"> regex </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">/(?!</span><span style="color:#89DDFF;font-style:italic;">^</span><span style="color:#89DDFF;">)(?=(</span><span style="color:#C3E88D;">\\d</span><span style="color:#89DDFF;">{3})+</span><span style="color:#89DDFF;font-style:italic;">$</span><span style="color:#89DDFF;">)/</span><span style="color:#F78C6C;">g</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#C792EA;">var</span><span style="color:#A6ACCD;"> result </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">12345678</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">replace</span><span style="color:#A6ACCD;">(regex</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">,</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(result)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// =&gt; &quot;12,345,678&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">result </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">123456789</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">replace</span><span style="color:#A6ACCD;">(regex</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">,</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(result)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// =&gt; &quot;123,456,789&quot;</span></span>
<span class="line"></span></code></pre></div><h5 id="_1-4-4支持其他形式" tabindex="-1">1.4.4支持其他形式 <a class="header-anchor" href="#_1-4-4支持其他形式" aria-hidden="true">#</a></h5><p>如果要把 &quot;12345678 123456789&quot; 替换成 &quot;12,345,678 123,456,789&quot;。 此时我们需要修改正则，把里面的开头 ^ 和结尾 $，修改成 \\b：</p><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">//不匹配单词边界的</span></span>
<span class="line"><span style="color:#C792EA;">var</span><span style="color:#A6ACCD;"> string </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">12345678 123456789</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">regex </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">/(?!</span><span style="color:#89DDFF;font-style:italic;">\\b</span><span style="color:#89DDFF;">)(?=(</span><span style="color:#C3E88D;">\\d</span><span style="color:#89DDFF;">{3})+</span><span style="color:#89DDFF;font-style:italic;">\\b</span><span style="color:#89DDFF;">)/</span><span style="color:#F78C6C;">g</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#C792EA;">var</span><span style="color:#A6ACCD;"> result </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> string</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">replace</span><span style="color:#A6ACCD;">(regex</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">,</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(result)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// =&gt; &quot;12,345,678 123,456,789</span></span>
<span class="line"></span></code></pre></div><p>其中 (?!\\b) 怎么理解呢？ 要求当前是一个位置，但不是 \\b 前面的位置，其实 (?!\\b) 说的就是 \\B。 因此最终正则变成了：/\\B(?=(\\d{3})+\\b)/g。</p><h5 id="_1-4-5验证密码问题" tabindex="-1">1.4.5验证密码问题 <a class="header-anchor" href="#_1-4-5验证密码问题" aria-hidden="true">#</a></h5><p>密码长度 6-12 位，由数字、小写字符和大写字母组成，但必须至少包括 2 种字符。 此题，如果写成多个正则来判断，比较容易。但要写成一个正则就比较困难。 那么，我们就来挑战一下。看看我们对位置的理解是否深刻。</p><p>如果不考虑“但必须至少包括 2 种字符”这一条件。我们可以容易写出：</p><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#C792EA;">var</span><span style="color:#A6ACCD;"> regex </span><span style="color:#89DDFF;">=</span><span style="color:#C3E88D;"> </span><span style="color:#89DDFF;">/</span><span style="color:#89DDFF;font-style:italic;">^</span><span style="color:#89DDFF;">[</span><span style="color:#C3E88D;">0-9A-Za-z</span><span style="color:#89DDFF;">]{6,12}</span><span style="color:#89DDFF;font-style:italic;">$</span><span style="color:#89DDFF;">/</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre></div><p>判断是否包含有某一种字符 假设，要求的必须包含数字，怎么办？此时我们可以使用 (?=.*[0-9]) 来做。 因此正则变成：</p><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#C792EA;">var</span><span style="color:#A6ACCD;"> regex </span><span style="color:#89DDFF;">=</span><span style="color:#C3E88D;"> </span><span style="color:#89DDFF;">/(?=</span><span style="color:#C3E88D;">.</span><span style="color:#89DDFF;">*[</span><span style="color:#C3E88D;">0-9</span><span style="color:#89DDFF;">])</span><span style="color:#89DDFF;font-style:italic;">^</span><span style="color:#89DDFF;">[</span><span style="color:#C3E88D;">0-9A-Za-z</span><span style="color:#89DDFF;">]{6,12}</span><span style="color:#89DDFF;font-style:italic;">$</span><span style="color:#89DDFF;">/</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre></div><p>同时包含具体两种字符 比如同时包含数字和小写字母，可以用 (?=.<em>[0-9])(?=.</em>[a-z]) 来做。 因此正则变成：</p><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#C792EA;">var</span><span style="color:#A6ACCD;"> regex </span><span style="color:#89DDFF;">=</span><span style="color:#C3E88D;"> </span><span style="color:#89DDFF;">/(?=</span><span style="color:#C3E88D;">.</span><span style="color:#89DDFF;">*[</span><span style="color:#C3E88D;">0-9</span><span style="color:#89DDFF;">])(?=</span><span style="color:#C3E88D;">.</span><span style="color:#89DDFF;">*[</span><span style="color:#C3E88D;">a-z</span><span style="color:#89DDFF;">])</span><span style="color:#89DDFF;font-style:italic;">^</span><span style="color:#89DDFF;">[</span><span style="color:#C3E88D;">0-9A-Za-z</span><span style="color:#89DDFF;">]{6,12}</span><span style="color:#89DDFF;font-style:italic;">$</span><span style="color:#89DDFF;">/</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre></div><p><strong>解惑</strong></p><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#A6ACCD;">上面的正则看起来比较复杂，只要理解了第二步，其余就全部理解了。</span></span>
<span class="line"><span style="color:#89DDFF;">/(?=</span><span style="color:#C3E88D;">.</span><span style="color:#89DDFF;">*[</span><span style="color:#C3E88D;">0-9</span><span style="color:#89DDFF;">])</span><span style="color:#89DDFF;font-style:italic;">^</span><span style="color:#89DDFF;">[</span><span style="color:#C3E88D;">0-9A-Za-z</span><span style="color:#89DDFF;">]{6,12}</span><span style="color:#89DDFF;font-style:italic;">$</span><span style="color:#89DDFF;">/</span></span>
<span class="line"><span style="color:#A6ACCD;">对于这个正则，</span><span style="color:#82AAFF;">我们只需要弄明白</span><span style="color:#A6ACCD;"> (</span><span style="color:#89DDFF;">?=.*</span><span style="color:#A6ACCD;">[</span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">-</span><span style="color:#F78C6C;">9</span><span style="color:#A6ACCD;">])</span><span style="color:#89DDFF;">^</span><span style="color:#A6ACCD;"> 即可。</span></span>
<span class="line"></span>
<span class="line"><span style="color:#82AAFF;">分开来看就是</span><span style="color:#A6ACCD;"> (</span><span style="color:#89DDFF;">?=.*</span><span style="color:#A6ACCD;">[</span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">-</span><span style="color:#F78C6C;">9</span><span style="color:#A6ACCD;">]) 和 </span><span style="color:#89DDFF;">^</span><span style="color:#A6ACCD;">。 表示开头前面还有个位置（当然也是开头，即同一个位置，想想之前的空字符类比）。</span></span>
<span class="line"><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">?=.*</span><span style="color:#A6ACCD;">[</span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">-</span><span style="color:#F78C6C;">9</span><span style="color:#A6ACCD;">]) 表示该位置后面的字符匹配 </span><span style="color:#89DDFF;">.*</span><span style="color:#A6ACCD;">[</span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">-</span><span style="color:#F78C6C;">9</span><span style="color:#A6ACCD;">]，即，有任何多个任意字符，后面再跟个数字。</span></span>
<span class="line"><span style="color:#A6ACCD;">翻译成大白话，就是接下来的字符，必须包含个数字。</span></span>
<span class="line"></span></code></pre></div>`,63),e=[t];function c(r,D,y,F,i,C){return n(),a("div",null,e)}const d=s(o,[["render",c]]);export{u as __pageData,d as default};
