import{_ as s,c as a,o as n,a as l}from"./app.f58bd366.js";const A=JSON.parse('{"title":"隐式转换","description":"","frontmatter":{},"headers":[{"level":3,"title":"先来见见这些题目(以下会返回啥?)","slug":"先来见见这些题目-以下会返回啥","link":"#先来见见这些题目-以下会返回啥","children":[]},{"level":3,"title":"然后我们再来看看一道经典面试题","slug":"然后我们再来看看一道经典面试题","link":"#然后我们再来看看一道经典面试题","children":[]},{"level":2,"title":"javascript隐式转换规则","slug":"javascript隐式转换规则","link":"#javascript隐式转换规则","children":[{"level":3,"title":"1. ToString，ToNumber，ToBoolean，ToPrimitive","slug":"_1-tostring-tonumber-toboolean-toprimitive","link":"#_1-tostring-tonumber-toboolean-toprimitive","children":[]},{"level":3,"title":"二.触发隐式转换","slug":"二-触发隐式转换","link":"#二-触发隐式转换","children":[]},{"level":3,"title":"三.解题","slug":"三-解题","link":"#三-解题","children":[]}]}],"relativePath":"article/web/javascript/base/5-隐式转换.md"}'),o={name:"article/web/javascript/base/5-隐式转换.md"},p=l(`<h1 id="隐式转换" tabindex="-1">隐式转换 <a class="header-anchor" href="#隐式转换" aria-hidden="true">#</a></h1><h3 id="先来见见这些题目-以下会返回啥" tabindex="-1">先来见见这些题目(以下会返回啥?) <a class="header-anchor" href="#先来见见这些题目-以下会返回啥" aria-hidden="true">#</a></h3><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#A6ACCD;">[]</span><span style="color:#89DDFF;">==</span><span style="color:#89DDFF;">&quot;&quot;</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#F78C6C;">1</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">+</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">null</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#F78C6C;">1</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">+</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">undefined</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#F78C6C;">1</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">+</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">0</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#F78C6C;">1</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">0</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#FF9CAC;">true</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">+</span><span style="color:#A6ACCD;"> </span><span style="color:#FF9CAC;">false</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">+</span><span style="color:#A6ACCD;">[</span><span style="color:#F78C6C;">0</span><span style="color:#A6ACCD;">]  </span></span>
<span class="line"><span style="color:#89DDFF;">!NaN</span><span style="color:#A6ACCD;">  </span></span>
<span class="line"><span style="color:#89DDFF;">!</span><span style="color:#A6ACCD;">[] </span></span>
<span class="line"><span style="color:#A6ACCD;">[]</span><span style="color:#89DDFF;">+!</span><span style="color:#A6ACCD;">[]</span></span>
<span class="line"><span style="color:#A6ACCD;">[]</span><span style="color:#89DDFF;">+</span><span style="color:#A6ACCD;">[]</span></span>
<span class="line"></span>
<span class="line"></span></code></pre></div><h3 id="然后我们再来看看一道经典面试题" tabindex="-1">然后我们再来看看一道经典面试题 <a class="header-anchor" href="#然后我们再来看看一道经典面试题" aria-hidden="true">#</a></h3><p>需求:输出true</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> a </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">?</span></span>
<span class="line"><span style="color:#82AAFF;">if</span><span style="color:#A6ACCD;">(a</span><span style="color:#89DDFF;">==</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">&amp;&amp;</span><span style="color:#A6ACCD;">a</span><span style="color:#89DDFF;">==</span><span style="color:#F78C6C;">2</span><span style="color:#89DDFF;">&amp;&amp;</span><span style="color:#A6ACCD;">a</span><span style="color:#89DDFF;">==</span><span style="color:#F78C6C;">3</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    console.log(true)</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><p>以上答案将在最后揭晓</p><p>好了,现在开始进入这次的核心:<strong>隐式转换</strong></p><p>首先我们要对隐式转换的规则要明确,那么js有什么隐式转换的规则呢?</p><h2 id="javascript隐式转换规则" tabindex="-1">javascript隐式转换规则 <a class="header-anchor" href="#javascript隐式转换规则" aria-hidden="true">#</a></h2><p>js数据类型之间转换的基本规则，比如数字、字符串、布尔型、数组、对象之间的相互转换。</p><h3 id="_1-tostring-tonumber-toboolean-toprimitive" tabindex="-1">1. ToString，ToNumber，ToBoolean，ToPrimitive <a class="header-anchor" href="#_1-tostring-tonumber-toboolean-toprimitive" aria-hidden="true">#</a></h3><p>这四个到底表示 什么呢 ?</p><h4 id="_1-1tostring" tabindex="-1">1.1ToString <a class="header-anchor" href="#_1-1tostring" aria-hidden="true">#</a></h4><p>这里所说的<code>ToString</code>可不是对象的<code>toString方法</code>，而是指其他类型的值转换为字符串类型的操作。</p><p>这里我们讨论<code>null</code>、<code>undefined</code>、<code>布尔型</code>、<code>数字</code>、<code>数组</code>、<code>普通对象</code>转换为字符串的规则。</p><ul><li><p>null：转为<code>&quot;null&quot;</code></p></li><li><p>undefined：转为<code>&quot;undefined&quot;</code></p></li><li><p>布尔类型：<code>true</code>和<code>false</code>分别被转为<code>&quot;true&quot;</code>和<code>&quot;false&quot;</code></p></li><li><p>数字类型：转为数字的字符串形式，如<code>10</code>转为<code>&quot;10&quot;</code></p></li><li><p>数组：转为字符串是将所有元素按照&quot;,&quot;连接起来，相当于调用数组的<code>Array.prototype.join()</code>方法，如<code>[1, 2, 3]</code>转为<code>&quot;1,2,3&quot;</code>，空数组<code>[]</code>转为空字符串，数组中的<code>null</code>或<code>undefined</code>，会被当做空字符串处理</p></li><li><p>普通对象：转为字符串相当于直接使用<code>Object.prototype.toString()</code>，返回<code>&quot;[object Object]&quot;</code></p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#82AAFF;">String</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">null</span><span style="color:#A6ACCD;">) </span><span style="color:#676E95;font-style:italic;">// &#39;null&#39;</span></span>
<span class="line"><span style="color:#82AAFF;">String</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">undefined</span><span style="color:#A6ACCD;">) </span><span style="color:#676E95;font-style:italic;">// &#39;undefined&#39;</span></span>
<span class="line"><span style="color:#82AAFF;">String</span><span style="color:#A6ACCD;">(</span><span style="color:#FF9CAC;">true</span><span style="color:#A6ACCD;">) </span><span style="color:#676E95;font-style:italic;">// &#39;true&#39;</span></span>
<span class="line"><span style="color:#82AAFF;">String</span><span style="color:#A6ACCD;">(</span><span style="color:#F78C6C;">10</span><span style="color:#A6ACCD;">) </span><span style="color:#676E95;font-style:italic;">// &#39;10&#39;</span></span>
<span class="line"><span style="color:#82AAFF;">String</span><span style="color:#A6ACCD;">([</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;">2</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;">3</span><span style="color:#A6ACCD;">]) </span><span style="color:#676E95;font-style:italic;">// &#39;1,2,3&#39;</span></span>
<span class="line"><span style="color:#82AAFF;">String</span><span style="color:#A6ACCD;">([]) </span><span style="color:#676E95;font-style:italic;">// &#39;&#39;</span></span>
<span class="line"><span style="color:#82AAFF;">String</span><span style="color:#A6ACCD;">([</span><span style="color:#89DDFF;">null</span><span style="color:#A6ACCD;">]) </span><span style="color:#676E95;font-style:italic;">// &#39;&#39;  </span></span>
<span class="line"><span style="color:#82AAFF;">String</span><span style="color:#A6ACCD;">([</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">undefined,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">3</span><span style="color:#A6ACCD;">]) </span><span style="color:#676E95;font-style:italic;">// &#39;1,,3&#39;</span></span>
<span class="line"><span style="color:#82AAFF;">String</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">{}</span><span style="color:#A6ACCD;">) </span><span style="color:#676E95;font-style:italic;">// &#39;[object Objecr]&#39;</span></span>
<span class="line"></span></code></pre></div></li></ul><p><strong>上面所说的规则是在默认的情况下，如果修改默认的<code>toString()</code>方法，会导致不同的结果</strong></p><h4 id="_1-2tonumber" tabindex="-1">1.2ToNumber <a class="header-anchor" href="#_1-2tonumber" aria-hidden="true">#</a></h4><p><code>ToNumber</code>指其他类型转换为数字类型的操作。</p><p>null： 转为<code>0</code></p><p>undefined：转为<code>NaN</code></p><p>字符串：如果是纯数字形式，则转为对应的数字，空字符转为<code>0</code>, 否则一律按转换失败处理，转为<code>NaN</code></p><p>布尔型：<code>true</code>和<code>false</code>被转为<code>1</code>和<code>0</code></p><p>数组：数组首先会被转为原始类型，也就是<code>ToPrimitive</code>，然后在根据转换后的原始类型按照上面的规则处理，关于<code>ToPrimitive</code>，会在下文中讲到</p><p>对象：同数组的处理</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#82AAFF;">Number</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">null</span><span style="color:#A6ACCD;">) </span><span style="color:#676E95;font-style:italic;">// 0</span></span>
<span class="line"><span style="color:#82AAFF;">Number</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">undefined</span><span style="color:#A6ACCD;">) </span><span style="color:#676E95;font-style:italic;">// NaN</span></span>
<span class="line"><span style="color:#82AAFF;">Number</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">10</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">) </span><span style="color:#676E95;font-style:italic;">// 10</span></span>
<span class="line"><span style="color:#82AAFF;">Number</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">10a</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">) </span><span style="color:#676E95;font-style:italic;">// NaN</span></span>
<span class="line"><span style="color:#82AAFF;">Number</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;&#39;</span><span style="color:#A6ACCD;">) </span><span style="color:#676E95;font-style:italic;">// 0 </span></span>
<span class="line"><span style="color:#82AAFF;">Number</span><span style="color:#A6ACCD;">(</span><span style="color:#FF9CAC;">true</span><span style="color:#A6ACCD;">) </span><span style="color:#676E95;font-style:italic;">// 1</span></span>
<span class="line"><span style="color:#82AAFF;">Number</span><span style="color:#A6ACCD;">(</span><span style="color:#FF9CAC;">false</span><span style="color:#A6ACCD;">) </span><span style="color:#676E95;font-style:italic;">// 0</span></span>
<span class="line"><span style="color:#82AAFF;">Number</span><span style="color:#A6ACCD;">([]) </span><span style="color:#676E95;font-style:italic;">// 0</span></span>
<span class="line"><span style="color:#82AAFF;">Number</span><span style="color:#A6ACCD;">([</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">1</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">]) </span><span style="color:#676E95;font-style:italic;">// 1</span></span>
<span class="line"><span style="color:#82AAFF;">Number</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">{}</span><span style="color:#A6ACCD;">) </span><span style="color:#676E95;font-style:italic;">// NaN</span></span>
<span class="line"></span></code></pre></div><h4 id="_1-3toboolean" tabindex="-1">1.3ToBoolean <a class="header-anchor" href="#_1-3toboolean" aria-hidden="true">#</a></h4><p><code>ToBoolean</code>指其他类型转换为布尔类型的操作。</p><p>js中的假值只有<code>false</code>、<code>null</code>、<code>undefined</code>、<code>空字符</code>(&quot;&quot;)、<code>0</code>和<code>NaN</code>，其它值转为布尔型都为<code>true</code>。</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#82AAFF;">Boolean</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">null</span><span style="color:#A6ACCD;">) </span><span style="color:#676E95;font-style:italic;">// false</span></span>
<span class="line"><span style="color:#82AAFF;">Boolean</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">undefined</span><span style="color:#A6ACCD;">) </span><span style="color:#676E95;font-style:italic;">// false</span></span>
<span class="line"><span style="color:#82AAFF;">Boolean</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;&#39;</span><span style="color:#A6ACCD;">) </span><span style="color:#676E95;font-style:italic;">// flase</span></span>
<span class="line"><span style="color:#82AAFF;">Boolean</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">NaN</span><span style="color:#A6ACCD;">) </span><span style="color:#676E95;font-style:italic;">// flase</span></span>
<span class="line"><span style="color:#82AAFF;">Boolean</span><span style="color:#A6ACCD;">(</span><span style="color:#F78C6C;">0</span><span style="color:#A6ACCD;">) </span><span style="color:#676E95;font-style:italic;">// flase</span></span>
<span class="line"><span style="color:#82AAFF;">Boolean</span><span style="color:#A6ACCD;">([]) </span><span style="color:#676E95;font-style:italic;">// true</span></span>
<span class="line"><span style="color:#82AAFF;">Boolean</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">{}</span><span style="color:#A6ACCD;">) </span><span style="color:#676E95;font-style:italic;">// true</span></span>
<span class="line"><span style="color:#82AAFF;">Boolean</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">Infinity</span><span style="color:#A6ACCD;">) </span><span style="color:#676E95;font-style:italic;">// true</span></span>
<span class="line"></span></code></pre></div><h4 id="_1-4toprimitive" tabindex="-1">1.4ToPrimitive <a class="header-anchor" href="#_1-4toprimitive" aria-hidden="true">#</a></h4><p>ToPrimitive指<strong>对象类型类型（如：对象、数组）转换为原始类型</strong>的操作。</p><p><strong>转换为数值型</strong></p><p>会先调用valueOf()方法 ,如果不行然后才会调用toString()方法</p><p><strong>转换为字符串型</strong></p><p>会先调用toString()方法 ,如果不行然后才会调用valueOf()方法</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#82AAFF;">Number</span><span style="color:#A6ACCD;">([])， 空数组会先调用valueOf，但返回的是数组本身，不是原始类型，所以会继续调用toString，得到空字符串，</span><span style="color:#82AAFF;">相当于Number</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;&#39;</span><span style="color:#A6ACCD;">)，所以转换后的结果为</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">0</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#82AAFF;">Number</span><span style="color:#A6ACCD;">([</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">10</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">])</span><span style="color:#82AAFF;">相当于Number</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">10</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)，得到结果10</span></span>
<span class="line"></span></code></pre></div><h3 id="二-触发隐式转换" tabindex="-1">二.触发隐式转换 <a class="header-anchor" href="#二-触发隐式转换" aria-hidden="true">#</a></h3><p>既然了解了隐式转换了,我们还需要知道怎么 触发隐式转换</p><p>常见的触发隐式转换 == + ! if()...</p><h4 id="_1" tabindex="-1">1.== <a class="header-anchor" href="#_1" aria-hidden="true">#</a></h4><p>== 俩边转换相同类型去比较</p><h4 id="_2" tabindex="-1">2.+ <a class="header-anchor" href="#_2" aria-hidden="true">#</a></h4><p>+操作符有三种情况</p><p>一种是数字相加</p><p>一种是字符串拼接</p><p>一种是转化数字</p><p>那么什么时候是数字相加,什么时候是字符串拼接呢 ?</p><p><strong>当俩边都是数字的时候 =&gt;数字相加</strong></p><p><strong>当有一边是字符串 =&gt;字符串拼接</strong></p><h4 id="_3" tabindex="-1">3.! <a class="header-anchor" href="#_3" aria-hidden="true">#</a></h4><p>非操作符会转化为布尔值.例如 !1=&gt; false</p><h4 id="_4-if" tabindex="-1">4.if() <a class="header-anchor" href="#_4-if" aria-hidden="true">#</a></h4><p>if里面的条件要么是false 要么是true.</p><h3 id="三-解题" tabindex="-1">三.解题 <a class="header-anchor" href="#三-解题" aria-hidden="true">#</a></h3><h4 id="_1-题1" tabindex="-1">1.题1 <a class="header-anchor" href="#_1-题1" aria-hidden="true">#</a></h4><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#A6ACCD;">[]</span><span style="color:#89DDFF;">==</span><span style="color:#89DDFF;">&quot;&quot;</span><span style="color:#A6ACCD;">  </span><span style="color:#676E95;font-style:italic;">//true </span></span>
<span class="line"></span>
<span class="line"><span style="color:#F78C6C;">1</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">+</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">null</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">//1</span></span>
<span class="line"><span style="color:#F78C6C;">1</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">+</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">undefined</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">//NaN</span></span>
<span class="line"><span style="color:#F78C6C;">1</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">+</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">0</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">//&quot;10&quot;</span></span>
<span class="line"><span style="color:#F78C6C;">1</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">0</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">//1</span></span>
<span class="line"><span style="color:#FF9CAC;">true</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">+</span><span style="color:#A6ACCD;"> </span><span style="color:#FF9CAC;">false</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">//1</span></span>
<span class="line"><span style="color:#89DDFF;">!NaN</span><span style="color:#A6ACCD;">  </span><span style="color:#676E95;font-style:italic;">//true</span></span>
<span class="line"><span style="color:#89DDFF;">!</span><span style="color:#A6ACCD;">[] </span><span style="color:#676E95;font-style:italic;">//false</span></span>
<span class="line"><span style="color:#A6ACCD;">[]</span><span style="color:#89DDFF;">+!</span><span style="color:#A6ACCD;">[] </span><span style="color:#676E95;font-style:italic;">//&quot;false&quot; 字符串false</span></span>
<span class="line"></span></code></pre></div><p>emm? 有点简简单单了,是不是???.....下面来解决第二题</p><h4 id="_2-题2" tabindex="-1">2.题2 <a class="header-anchor" href="#_2-题2" aria-hidden="true">#</a></h4><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> a </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">?</span></span>
<span class="line"><span style="color:#82AAFF;">if</span><span style="color:#A6ACCD;">(a</span><span style="color:#89DDFF;">==</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">&amp;&amp;</span><span style="color:#A6ACCD;">a</span><span style="color:#89DDFF;">==</span><span style="color:#F78C6C;">2</span><span style="color:#89DDFF;">&amp;&amp;</span><span style="color:#A6ACCD;">a</span><span style="color:#89DDFF;">==</span><span style="color:#F78C6C;">3</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    console.log(true)</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">a </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">i</span><span style="color:#89DDFF;">:</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">toString</span><span style="color:#89DDFF;">(){</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">a</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">i</span><span style="color:#89DDFF;">++;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"></span></code></pre></div><p>首先看题: =&gt; 需求:输出true</p><p>分析:</p><p>如果 我们想要 输入 true的话 ,那么 我们的a就要等于1 然后等于2 然后等于3 =&gt;if(true)....</p><p>emm?想一下,没想到,没关系~~~~</p><p>那么我们如何实现呢?</p><p>看了一下 == 如果我们每次隐式转换的时候让a+1 不就好啦...</p><p>说干就干</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> a </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">i</span><span style="color:#89DDFF;">:</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">toString</span><span style="color:#89DDFF;">(){</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">a</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">i</span><span style="color:#89DDFF;">++;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#A6ACCD;">(a</span><span style="color:#89DDFF;">==</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">&amp;&amp;</span><span style="color:#A6ACCD;">a</span><span style="color:#89DDFF;">==</span><span style="color:#F78C6C;">2</span><span style="color:#89DDFF;">&amp;&amp;</span><span style="color:#A6ACCD;">a</span><span style="color:#89DDFF;">==</span><span style="color:#F78C6C;">3</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">a</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#FF9CAC;">true</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><h4 id="四-场景应用" tabindex="-1">四.场景应用 <a class="header-anchor" href="#四-场景应用" aria-hidden="true">#</a></h4><h4 id="_1-场景一-判断这个值是否拥有" tabindex="-1">1.场景一.判断这个值是否拥有 <a class="header-anchor" href="#_1-场景一-判断这个值是否拥有" aria-hidden="true">#</a></h4><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#A6ACCD;">(val)</span><span style="color:#89DDFF;">....</span></span>
<span class="line"></span></code></pre></div><h4 id="_2-场景二-转换类型" tabindex="-1">2.场景二,转换类型... <a class="header-anchor" href="#_2-场景二-转换类型" aria-hidden="true">#</a></h4><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">//我需要将这个数字字符串转化为数字</span></span>
<span class="line"><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">100</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#89DDFF;">+</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">100</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#F78C6C;">100</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">//其他方法省略...</span></span>
<span class="line"></span></code></pre></div><h4 id="_3-其他场景-后续" tabindex="-1">3.其他场景....后续...... <a class="header-anchor" href="#_3-其他场景-后续" aria-hidden="true">#</a></h4>`,75),e=[p];function t(c,r,i,y,C,D){return n(),a("div",null,e)}const d=s(o,[["render",t]]);export{A as __pageData,d as default};
