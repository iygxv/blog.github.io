import{_ as s,c as n,o as a,a as l}from"./app.f58bd366.js";const p="/assets/1621676946378-71d6b405-ef4e-42e4-9e42-f9c9aafcefb6.ea5c6f3f.png",d=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[{"level":2,"title":"一、JavaScript 基础","slug":"一、javascript-基础","link":"#一、javascript-基础","children":[{"level":3,"title":"1. 手写 Object.create","slug":"_1-手写-object-create","link":"#_1-手写-object-create","children":[]},{"level":3,"title":"2. 手写 instanceof 方法","slug":"_2-手写-instanceof-方法","link":"#_2-手写-instanceof-方法","children":[]},{"level":3,"title":"3. 手写 new 操作符","slug":"_3-手写-new-操作符","link":"#_3-手写-new-操作符","children":[]},{"level":3,"title":"4. 手写 Promise","slug":"_4-手写-promise","link":"#_4-手写-promise","children":[]},{"level":3,"title":"5. 手写 Promise.then","slug":"_5-手写-promise-then","link":"#_5-手写-promise-then","children":[]},{"level":3,"title":"6. 手写 Promise.all","slug":"_6-手写-promise-all","link":"#_6-手写-promise-all","children":[]},{"level":3,"title":"7. 手写 Promise.race","slug":"_7-手写-promise-race","link":"#_7-手写-promise-race","children":[]},{"level":3,"title":"8. 手写防抖函数","slug":"_8-手写防抖函数","link":"#_8-手写防抖函数","children":[]},{"level":3,"title":"9. 手写节流函数","slug":"_9-手写节流函数","link":"#_9-手写节流函数","children":[]},{"level":3,"title":"10. 手写类型判断函数","slug":"_10-手写类型判断函数","link":"#_10-手写类型判断函数","children":[]},{"level":3,"title":"11. 手写 call 函数","slug":"_11-手写-call-函数","link":"#_11-手写-call-函数","children":[]},{"level":3,"title":"12. 手写 apply 函数","slug":"_12-手写-apply-函数","link":"#_12-手写-apply-函数","children":[]},{"level":3,"title":"13. 手写 bind 函数","slug":"_13-手写-bind-函数","link":"#_13-手写-bind-函数","children":[]},{"level":3,"title":"14. 函数柯里化的实现","slug":"_14-函数柯里化的实现","link":"#_14-函数柯里化的实现","children":[]},{"level":3,"title":"15. 实现AJAX请求","slug":"_15-实现ajax请求","link":"#_15-实现ajax请求","children":[]},{"level":3,"title":"16. 使用Promise封装AJAX请求","slug":"_16-使用promise封装ajax请求","link":"#_16-使用promise封装ajax请求","children":[]},{"level":3,"title":"17. 实现浅拷贝","slug":"_17-实现浅拷贝","link":"#_17-实现浅拷贝","children":[]},{"level":3,"title":"18. 实现深拷贝","slug":"_18-实现深拷贝","link":"#_18-实现深拷贝","children":[]}]},{"level":2,"title":"二、数据处理","slug":"二、数据处理","link":"#二、数据处理","children":[{"level":3,"title":"1. 实现日期格式化函数","slug":"_1-实现日期格式化函数","link":"#_1-实现日期格式化函数","children":[]},{"level":3,"title":"2. 交换a,b的值，不能用临时变量","slug":"_2-交换a-b的值-不能用临时变量","link":"#_2-交换a-b的值-不能用临时变量","children":[]},{"level":3,"title":"3. 实现数组的乱序输出","slug":"_3-实现数组的乱序输出","link":"#_3-实现数组的乱序输出","children":[]},{"level":3,"title":"4. 实现数组元素求和","slug":"_4-实现数组元素求和","link":"#_4-实现数组元素求和","children":[]},{"level":3,"title":"5. 实现数组的扁平化","slug":"_5-实现数组的扁平化","link":"#_5-实现数组的扁平化","children":[]},{"level":3,"title":"6. 实现数组去重","slug":"_6-实现数组去重","link":"#_6-实现数组去重","children":[]},{"level":3,"title":"7. 实现数组的flat方法","slug":"_7-实现数组的flat方法","link":"#_7-实现数组的flat方法","children":[]},{"level":3,"title":"8. 实现数组的push方法","slug":"_8-实现数组的push方法","link":"#_8-实现数组的push方法","children":[]},{"level":3,"title":"9. 实现数组的filter方法","slug":"_9-实现数组的filter方法","link":"#_9-实现数组的filter方法","children":[]},{"level":3,"title":"10. 实现数组的map方法","slug":"_10-实现数组的map方法","link":"#_10-实现数组的map方法","children":[]},{"level":3,"title":"11. 实现字符串的repeat方法","slug":"_11-实现字符串的repeat方法","link":"#_11-实现字符串的repeat方法","children":[]},{"level":3,"title":"12. 实现字符串翻转","slug":"_12-实现字符串翻转","link":"#_12-实现字符串翻转","children":[]},{"level":3,"title":"13. 将数字每千分位用逗号隔开","slug":"_13-将数字每千分位用逗号隔开","link":"#_13-将数字每千分位用逗号隔开","children":[]},{"level":3,"title":"14. 实现非负大整数相加","slug":"_14-实现非负大整数相加","link":"#_14-实现非负大整数相加","children":[]},{"level":3,"title":"13. 实现 add(1)(2)(3)","slug":"_13-实现-add-1-2-3","link":"#_13-实现-add-1-2-3","children":[]},{"level":3,"title":"14. 实现类数组转化为数组","slug":"_14-实现类数组转化为数组","link":"#_14-实现类数组转化为数组","children":[]},{"level":3,"title":"15. 使用 reduce 求和","slug":"_15-使用-reduce-求和","link":"#_15-使用-reduce-求和","children":[]},{"level":3,"title":"16. 将js对象转化为树形结构","slug":"_16-将js对象转化为树形结构","link":"#_16-将js对象转化为树形结构","children":[]},{"level":3,"title":"17. 使用ES5和ES6求函数参数的和","slug":"_17-使用es5和es6求函数参数的和","link":"#_17-使用es5和es6求函数参数的和","children":[]},{"level":3,"title":"18. 解析 URL Params 为对象","slug":"_18-解析-url-params-为对象","link":"#_18-解析-url-params-为对象","children":[]}]},{"level":2,"title":"三、场景应用","slug":"三、场景应用","link":"#三、场景应用","children":[{"level":3,"title":"1. 循环打印红黄绿","slug":"_1-循环打印红黄绿","link":"#_1-循环打印红黄绿","children":[]},{"level":3,"title":"2. 实现每隔一秒打印 1,2,3,4","slug":"_2-实现每隔一秒打印-1-2-3-4","link":"#_2-实现每隔一秒打印-1-2-3-4","children":[]},{"level":3,"title":"3. 小孩报数问题","slug":"_3-小孩报数问题","link":"#_3-小孩报数问题","children":[]},{"level":3,"title":"4. 用Promise实现图片的异步加载","slug":"_4-用promise实现图片的异步加载","link":"#_4-用promise实现图片的异步加载","children":[]},{"level":3,"title":"5. 实现发布-订阅模式","slug":"_5-实现发布-订阅模式","link":"#_5-实现发布-订阅模式","children":[]},{"level":3,"title":"6. 查找文章中出现频率最高的单词","slug":"_6-查找文章中出现频率最高的单词","link":"#_6-查找文章中出现频率最高的单词","children":[]},{"level":3,"title":"7. 封装异步的fetch，使用async await方式来使用","slug":"_7-封装异步的fetch-使用async-await方式来使用","link":"#_7-封装异步的fetch-使用async-await方式来使用","children":[]},{"level":3,"title":"8. 实现prototype继承","slug":"_8-实现prototype继承","link":"#_8-实现prototype继承","children":[]},{"level":3,"title":"9. 实现双向数据绑定","slug":"_9-实现双向数据绑定","link":"#_9-实现双向数据绑定","children":[]},{"level":3,"title":"10. 实现简单路由","slug":"_10-实现简单路由","link":"#_10-实现简单路由","children":[]},{"level":3,"title":"11. 实现斐波那契数列","slug":"_11-实现斐波那契数列","link":"#_11-实现斐波那契数列","children":[]},{"level":3,"title":"12. 字符串出现的不重复最长长度","slug":"_12-字符串出现的不重复最长长度","link":"#_12-字符串出现的不重复最长长度","children":[]},{"level":3,"title":"13. 使用 setTimeout 实现 setInterval","slug":"_13-使用-settimeout-实现-setinterval","link":"#_13-使用-settimeout-实现-setinterval","children":[]},{"level":3,"title":"14. 实现 jsonp","slug":"_14-实现-jsonp","link":"#_14-实现-jsonp","children":[]},{"level":3,"title":"15. 判断对象是否存在循环引用","slug":"_15-判断对象是否存在循环引用","link":"#_15-判断对象是否存在循环引用","children":[]}]}],"relativePath":"article/interview/series/8-代码手写.md"}'),o={name:"article/interview/series/8-代码手写.md"},e=l("",272),t=[e];function c(r,y,F,D,C,A){return a(),n("div",null,t)}const u=s(o,[["render",c]]);export{d as __pageData,u as default};
