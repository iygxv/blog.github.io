import{_ as s,c as a,o as n,N as l}from"./chunks/framework.5b6ea098.js";const o="/blog/assets/image-20221002172639694.b7f27827.png",p="/blog/assets/image-20221002172935463.cb64fefc.png",e="/blog/assets/image-20221002205913227.ab860b94.png",t="/blog/assets/image-20221002180204774.305c3bd7.png",c="/blog/assets/image-20221002213052571.9383a854.png",r="/blog/assets/image-20221002213145063.4f1dcba7.png",q=JSON.parse('{"title":"6-开发代码规范和git提交检测","description":"","frontmatter":{},"headers":[],"relativePath":"article/harvest/i-know/6-开发代码规范和提交规范.md"}'),i={name:"article/harvest/i-know/6-开发代码规范和提交规范.md"},D=l(`<h1 id="_6-开发代码规范和git提交检测" tabindex="-1">6-开发代码规范和git提交检测 <a class="header-anchor" href="#_6-开发代码规范和git提交检测" aria-label="Permalink to &quot;6-开发代码规范和git提交检测&quot;">​</a></h1><h2 id="代码规范" tabindex="-1">代码规范 <a class="header-anchor" href="#代码规范" aria-label="Permalink to &quot;代码规范&quot;">​</a></h2><h3 id="代码检查工具" tabindex="-1">代码检查工具 <a class="header-anchor" href="#代码检查工具" aria-label="Permalink to &quot;代码检查工具&quot;">​</a></h3><ul><li><strong>ESlint</strong></li><li>配置文件: <strong>.eslintrc.js</strong></li><li>忽略文件: .eslintignore</li></ul><h3 id="代码风格工具" tabindex="-1">代码风格工具 <a class="header-anchor" href="#代码风格工具" aria-label="Permalink to &quot;代码风格工具&quot;">​</a></h3><ul><li><strong>prettier</strong></li><li>配置文件: .prettierrc.js</li></ul><h2 id="eslint检查" tabindex="-1">ESlint检查 <a class="header-anchor" href="#eslint检查" aria-label="Permalink to &quot;ESlint检查&quot;">​</a></h2><p>先创建一个vue3+vite的项目</p><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">yarn</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">create</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">vite</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">my-vue-app</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--template</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">vue</span></span></code></pre></div><p>创建完成后,使用<code>ESlint</code>进行代码检查</p><p><a href="https://eslint.bootcss.com/" target="_blank" rel="noreferrer">ESlint官方文档</a></p><p>然后安装ESlint(全局安装一下)</p><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">yarn</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">add</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">eslint</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-g</span></span></code></pre></div><p>eslint初始化命令</p><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">npx</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">eslint</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--init</span></span></code></pre></div><p>执行完毕后出现</p><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> How would you like to use ESLint</span><span style="color:#89DDFF;">?</span></span>
<span class="line"><span style="color:#FFCB6B;">选择：To</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">check</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">syntax</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">and</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">find</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">problems</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">2</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> What type of modules does your project use</span><span style="color:#89DDFF;">?</span></span>
<span class="line"><span style="color:#FFCB6B;">选择：JavaScript</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">modules</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">import/export</span><span style="color:#89DDFF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">3</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> Which framework does your project use</span><span style="color:#89DDFF;">?</span></span>
<span class="line"><span style="color:#FFCB6B;">选择：Vue.js</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">4</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> Does your project use TypeScript</span><span style="color:#89DDFF;">?</span></span>
<span class="line"><span style="color:#FFCB6B;">选择：Yes</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">5</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> Where does your code run</span><span style="color:#89DDFF;">?</span></span>
<span class="line"><span style="color:#FFCB6B;">选择：Browser</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">6</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> What format </span><span style="color:#89DDFF;font-style:italic;">do</span><span style="color:#A6ACCD;"> you want your config file to be in</span><span style="color:#89DDFF;">?</span></span>
<span class="line"><span style="color:#FFCB6B;">选择：JavaScript</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">7</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> Would you like to install them now</span><span style="color:#89DDFF;">?</span></span>
<span class="line"><span style="color:#FFCB6B;">选择：Yes</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">8</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> Which package manager </span><span style="color:#89DDFF;font-style:italic;">do</span><span style="color:#A6ACCD;"> you want to use</span><span style="color:#89DDFF;">?</span></span>
<span class="line"><span style="color:#FFCB6B;">选择：yarn</span></span></code></pre></div><h3 id="依赖安装完成后-会生成-eslintrc-js配置文件" tabindex="-1">依赖安装完成后，会生成<code>.eslintrc.js</code>配置文件 <a class="header-anchor" href="#依赖安装完成后-会生成-eslintrc-js配置文件" aria-label="Permalink to &quot;依赖安装完成后，会生成\`.eslintrc.js\`配置文件&quot;">​</a></h3><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">module.exports</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">env</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">browser</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FF9CAC;">true</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">es2021</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FF9CAC;">true</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">extends</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> [</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">eslint:recommended</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">plugin:vue/vue3-essential</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">plugin:@typescript-eslint/recommended</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">]</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">overrides</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> []</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">parser</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">@typescript-eslint/parser</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">parserOptions</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">ecmaVersion</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">latest</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">sourceType</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">module</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">plugins</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> [</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">vue</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">@typescript-eslint</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">]</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">rules</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><h3 id="在package-json文件中的script中添加lint命令" tabindex="-1">在<code>package.json</code>文件中的<code>script</code>中添加<code>lint</code>命令 <a class="header-anchor" href="#在package-json文件中的script中添加lint命令" aria-label="Permalink to &quot;在\`package.json\`文件中的\`script\`中添加\`lint\`命令&quot;">​</a></h3><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">scripts</span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">: </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">        </span><span style="color:#676E95;font-style:italic;">// eslint . 为指定lint当前项目中的文件</span></span>
<span class="line"><span style="color:#89DDFF;">        </span><span style="color:#676E95;font-style:italic;">// --ext 为指定lint哪些后缀的文件</span></span>
<span class="line"><span style="color:#89DDFF;">        </span><span style="color:#676E95;font-style:italic;">// --fix 开启自动修复</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">lint</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">eslint . --ext .vue,.js,.ts,.jsx,.tsx --fix</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><h3 id="执行lint命令" tabindex="-1">执行<code>lint</code>命令 <a class="header-anchor" href="#执行lint命令" aria-label="Permalink to &quot;执行\`lint\`命令&quot;">​</a></h3><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">yarn</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">lint</span></span></code></pre></div><img src="`+o+'" alt="image-20221002172639694" style="zoom:50%;"><p>出现了没有找到<code>typescript</code>模块,安装一下</p><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">yarn</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">add</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">typescript</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-D</span></span></code></pre></div><p>再次执行<code>yarn lint</code>命令</p><img src="'+p+`" alt="image-20221002172935463" style="zoom:50%;"><p>会出现上面的错误, 解析<code>.vue</code>后缀的文件时候出现解析错误<code>parsing error</code></p><p><code>eslint</code>默认是不会解析<code>.vue</code>后缀文件的。因此，需要一个额外的解析器来解析<code>.vue</code>后缀文件。</p><p>但是我们查看<code>.eslintrc.js</code>文件中的<code>extends</code>会发现已经有继承<code>&quot;plugin:vue/vue3-essential&quot;</code>的配置。然后在<code>node_modules</code>中可以找到<code>eslint-plugin-vue/lib/cinfigs/essential</code>，里面配置了<code>extends</code>是继承于同级目录下的<code>base.js</code>，在里面会发现<code>parser: require.resolve(&#39;vue-eslint-parser&#39;)</code>这个配置。因此，按道理来说应该是会解析<code>.vue</code>后缀文件的。</p><p>继续往下看<code>.eslintrc.js</code>文件中的<code>extends</code>会发现，<code>extends</code>中还有一个<code>&quot;plugin:@typescript-eslint/recommended&quot;</code>，它是来自于<code>/node_modules/@typescript-eslint/eslint-plugin/dist/configs/recommended.js</code>，查看该文件会发现最终继承于同级目录下的<code>base.js</code>文件。从该文件中可以发现<code>parser: &#39;@typescript-eslint/parser&#39;,</code>配置。</p><p>按照<code>.eslintrc.js</code>文件中的<code>extends</code>配置的顺序可知，最终导致报错的原因就是<code>@typescript-eslint/parser</code>把<code>vue-eslint-parser</code>覆盖了。</p><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">    &quot;</span><span style="color:#C3E88D;">extends</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">: </span><span style="color:#89DDFF;">[</span></span>
<span class="line"><span style="color:#89DDFF;">        &quot;</span><span style="color:#C3E88D;">eslint:recommended</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">,</span></span>
<span class="line"><span style="color:#89DDFF;">        &quot;</span><span style="color:#C3E88D;">plugin:vue/vue3-essential</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">,</span></span>
<span class="line"><span style="color:#89DDFF;">        &quot;</span><span style="color:#C3E88D;">plugin:@typescript-eslint/recommended</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">]</span><span style="color:#A6ACCD;">,</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><p>查看<a href="https://link.juejin.cn?target=https%3A%2F%2Feslint.vuejs.org%2Fuser-guide%2F%23faq" target="_blank" rel="noreferrer">eslint-plugin-vue</a>官方文档可知。如果已经使用了另外的解析器（例如<code>&quot;parser&quot;: &quot;@typescript-eslint/parser&quot;</code>），则需要将其移至<code>parseOptions</code>，这样才不会与<code>vue-eslint-parser</code>冲突。</p><p>修改<code>.eslintrc.js</code>文件</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">module.exports</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">env</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">browser</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FF9CAC;">true</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">es2021</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FF9CAC;">true</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">node</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FF9CAC;">true</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">extends</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> [</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">eslint:recommended</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">plugin:vue/vue3-essential</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">plugin:@typescript-eslint/recommended</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">    ]</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">parser</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">vue-eslint-parser</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">parserOptions</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">ecmaVersion</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">latest</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">parser</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">@typescript-eslint/parser</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// 新增</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">sourceType</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">module</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">plugins</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> [</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">vue</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">@typescript-eslint</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">    ]</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">rules</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><p>两个<code>parser</code>的区别在于，外面的<code>parser</code>用来解析<code>.vue</code>后缀文件，使得<code>eslint</code>能解析<code>&lt;template&gt;</code>标签中的内容，而<code>parserOptions</code>中的<code>parser</code>，即<code>@typescript-eslint/parser</code>用来解析vue文件中<code>&lt;script&gt;</code>标签中的代码。</p><p>此时，再执行<code> yarn lint</code>，就会发现校验通过了。</p><h3 id="安装vscode插件eslint" tabindex="-1">安装vscode插件ESLint <a class="header-anchor" href="#安装vscode插件eslint" aria-label="Permalink to &quot;安装vscode插件ESLint&quot;">​</a></h3><p>如果写一行代码就要执行一遍<code>lint</code>命令，这效率就太低了。所以我们可以配合vscode的<code>ESLint</code>插件，实现每次保存代码时，自动执行<code>lint</code>命令来修复代码的错误。</p><p>在项目中新建<code>.vscode/settings.json</code>文件，然后在其中加入以下配置。</p><div class="language-json"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#676E95;font-style:italic;">// 开启自动修复</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">editor.codeActionsOnSave</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">source.fixAll</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">false,</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">source.fixAll.eslint</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">true</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><h3 id="测试eslint插件" tabindex="-1">测试ESlint插件 <a class="header-anchor" href="#测试eslint插件" aria-label="Permalink to &quot;测试ESlint插件&quot;">​</a></h3><p>执行启动命令</p><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">yarn</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">dev</span></span></code></pre></div><p>.eslintrc.cjs中加入规则</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">rules</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">// 禁止不必要的分号</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">no-extra-semi</span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;">: </span><span style="color:#F78C6C;">2</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">// 省略...</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><p><img src="`+e+`" alt="image-20221002205913227"></p><h3 id="安装依赖说明" tabindex="-1">安装依赖说明 <a class="header-anchor" href="#安装依赖说明" aria-label="Permalink to &quot;安装依赖说明&quot;">​</a></h3><ul><li><a href="https://link.juejin.cn/?target=https%3A%2F%2Fcn.eslint.org%2F" target="_blank" rel="noreferrer">eslint</a>： JavaScript 和 JSX 检查工具</li><li><a href="https://link.juejin.cn/?target=https%3A%2F%2Feslint.vuejs.org%2F" target="_blank" rel="noreferrer">eslint-plugin-vue</a>： 使用 ESLint 检查 .vue文件 的 <code>&lt;template&gt;</code> 和 <code>&lt;script&gt;</code>，以及<code>.js</code>文件中的Vue代码</li></ul><h2 id="配置prettier" tabindex="-1">配置prettier <a class="header-anchor" href="#配置prettier" aria-label="Permalink to &quot;配置prettier&quot;">​</a></h2><p>安装</p><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">yarn</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">add</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">prettier</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-D</span></span></code></pre></div><h3 id="在根目录下新建-prettierrc-js" tabindex="-1">在根目录下新建<code>.prettierrc.js</code> <a class="header-anchor" href="#在根目录下新建-prettierrc-js" aria-label="Permalink to &quot;在根目录下新建\`.prettierrc.js\`&quot;">​</a></h3><p>添加以下配置，更多配置可查看<a href="https://link.juejin.cn/?target=https%3A%2F%2Fprettier.io%2Fdocs%2Fen%2Foptions.html" target="_blank" rel="noreferrer">官方文档</a></p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">module.exports</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">// 一行的字符数，如果超过会进行换行，默认为80</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">printWidth</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">80</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">// 一个tab代表几个空格数，默认为80</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">tabWidth</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">2</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">// 是否使用tab进行缩进，默认为false，表示用空格进行缩减</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">useTabs</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FF9CAC;">false</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">// 字符串是否使用单引号，默认为false，使用双引号</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">singleQuote</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FF9CAC;">true</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">// 行位是否使用分号，默认为true</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">semi</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FF9CAC;">false</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">// 是否使用尾逗号，有三个可选值&quot;&lt;none|es5|all&gt;&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">trailingComma</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">none</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">// 对象大括号直接是否有空格，默认为true，效果：{ foo: bar }</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">bracketSpacing</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FF9CAC;">true</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><h3 id="在package-json中的script中添加以下命令" tabindex="-1">在<code>package.json</code>中的<code>script</code>中添加以下命令 <a class="header-anchor" href="#在package-json中的script中添加以下命令" aria-label="Permalink to &quot;在\`package.json\`中的\`script\`中添加以下命令&quot;">​</a></h3><div class="language-json"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">scripts</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">format</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">prettier --write </span><span style="color:#A6ACCD;">\\&quot;</span><span style="color:#C3E88D;">./**/*.{html,vue,ts,js,json,md}</span><span style="color:#A6ACCD;">\\&quot;</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><p>运行该命令，会将我们项目中的文件都格式化一遍，<strong>后续如果添加其他格式的文件，可在该命令中添加，例如：<code>.less</code>后缀的文件</strong></p><h3 id="安装vscode的prettier-code-formatter插件" tabindex="-1">安装vscode的Prettier - Code formatter插件 <a class="header-anchor" href="#安装vscode的prettier-code-formatter插件" aria-label="Permalink to &quot;安装vscode的Prettier - Code formatter插件&quot;">​</a></h3><p>安装该插件的目的是，让该插件在我们保存的时候自动完成格式化</p><p>在<code>.vscode/settings.json</code>中添加一下规则</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">// 保存的时候自动格式化</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">editor.formatOnSave</span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">: </span><span style="color:#FF9CAC;">true</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">// 默认格式化工具选择prettier</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">editor.defaultFormatter</span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">: </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">esbenp.prettier-vscode</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><h2 id="解决eslint与prettier的冲突" tabindex="-1">解决<code>eslint</code>与<code>prettier</code>的冲突 <a class="header-anchor" href="#解决eslint与prettier的冲突" aria-label="Permalink to &quot;解决\`eslint\`与\`prettier\`的冲突&quot;">​</a></h2><p>在理想的状态下，<code>eslint</code>与<code>prettier</code>应该各司其职。<code>eslint</code>负责我们的代码质量，<code>prettier</code>负责我们的代码格式。但是在使用的过程中会发现，由于我们开启了自动化的<code>eslint</code>修复与自动化的根据<code>prettier</code>来格式化代码。所以我们已保存代码，会出现屏幕闪一起后又恢复到了报错的状态。</p><p>这其中的根本原因就是<code>eslint</code>有部分规则与<code>prettier</code>冲突了，所以保存的时候显示运行了<code>eslint</code>的修复命令，然后再运行<code>prettier</code>格式化，所以就会出现屏幕闪一下然后又恢复到报错的现象。这时候你可以检查一下是否存在冲突的规则。</p><p>查阅资料会发现，社区已经为我们提供了一个非常成熟的方案，即<code>eslint-config-prettier</code> + <code>eslint-plugin-prettier</code>。</p><ul><li><a href="https://link.juejin.cn?target=https%3A%2F%2Fgithub.com%2Fprettier%2Feslint-plugin-prettier" target="_blank" rel="noreferrer">eslint-plugin-prettier</a>： 基于 prettier 代码风格的 eslint 规则，即eslint使用pretter规则来格式化代码。</li><li><a href="https://link.juejin.cn?target=https%3A%2F%2Fgithub.com%2Fprettier%2Feslint-config-prettier" target="_blank" rel="noreferrer">eslint-config-prettier</a>： 禁用所有与格式相关的 eslint 规则，解决 prettier 与 eslint 规则冲突，<strong>确保将其放在 extends 队列最后，这样它将覆盖其他配置</strong></li></ul><h3 id="安装依赖" tabindex="-1">安装依赖 <a class="header-anchor" href="#安装依赖" aria-label="Permalink to &quot;安装依赖&quot;">​</a></h3><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">yarn</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">add</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">eslint-config-prettier</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">eslint-plugin-prettier</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-D</span></span></code></pre></div><h3 id="在-eslintrc-js中extends-的最后添加一个配置" tabindex="-1">在 <code>.eslintrc.js中</code>extends\`的最后添加一个配置 <a class="header-anchor" href="#在-eslintrc-js中extends-的最后添加一个配置" aria-label="Permalink to &quot;在 \`.eslintrc.js中\`extends\`的最后添加一个配置&quot;">​</a></h3><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#FFCB6B;">extends</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> [</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">eslint:recommended</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">plugin:vue/vue3-essential</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">plugin:@typescript-eslint/recommended</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#89DDFF;">+</span><span style="color:#F07178;">    </span><span style="color:#676E95;font-style:italic;">// 新增，必须放在最后面</span></span>
<span class="line"><span style="color:#89DDFF;">+</span><span style="color:#F07178;">    </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">plugin:prettier/recommended</span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;"> </span></span>
<span class="line"><span style="color:#F07178;">  ]</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><p>最后<strong>重启vscode</strong>，你会发现冲突消失了，<code>eslint</code>与<code>prettier</code>也按照我们预想的各司其职了。</p><h2 id="git提交检测" tabindex="-1">git提交检测 <a class="header-anchor" href="#git提交检测" aria-label="Permalink to &quot;git提交检测&quot;">​</a></h2><ul><li>husky(添加git hook)</li><li>lint-staged</li></ul><h2 id="配置-husky-lint-staged" tabindex="-1">配置 husky + lint-staged <a class="header-anchor" href="#配置-husky-lint-staged" aria-label="Permalink to &quot;配置 husky + lint-staged&quot;">​</a></h2><p>理论上，到上一步我们已经能使得我们的项目获得不错的开发规范约束了。然而仍然有可以改进的地方：</p><ul><li>如果是在项目中途才接入<code>eslint + prettier</code>,如果对原来的代码使用<code>yarn run lint </code>或者 <code>yarn run format</code>势必会带来大范围地改动，甚至会造成冲突。</li><li>对于一些不使用<code>vscode</code>编辑器，或者没有安装<code>prettier</code>和<code>eslint</code>插件的用户而言，他们不能享受到插件带来的协助，而他们的代码自然大概率是不符合规范的，不该被提交到代码库。</li></ul><p>基于上述的顾虑，社区提供了 <code>husky + lint-staged</code>的渐进式方案。 <code>lint-staged</code> 是一个只检测<code>git</code>暂存区的<code>lint</code>工具，<code>husky</code>是一个用来给我们的项目添加<code>git hook</code>的工具，<code>git hook</code>是进行git操作会触发的脚本，例如：提交的时候会触发<code>pre-commit</code>钩子,输入提交信息会触发<code>commit-msg</code>钩子。 我们用<code>husky</code>安装<code>pre-commit</code>钩子，我们就可以在进行<code>git commit</code>操作的时候，运行我们的脚本来检测待提交的代码是否规范，便可以只对暂存区的文件进行检查。</p><p>首先安装依赖</p><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">yarn</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">add</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">husky</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">lint-staged</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-D</span></span></code></pre></div><p>添加一个在<code>package.json</code>中添加一条<code>preinstall</code>脚本</p><div class="language-json"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">script</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:{</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">prepare</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">husky install</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><p><code>prepare</code>脚本会在 <code>yarn</code> 之后自动运行，这样依赖你的小伙伴<code>clone</code>了你的项目之后会自动安装<code>husky</code>,这里由于我们已经运行过 <code>yarn</code> 了，所以我们需要手动运行一次<code>yarn prepare</code>,然后我们就会得到一个目录<code>.husky</code>。</p><img src="`+t+`" alt="image-20221002180204774" style="zoom:50%;"><p>接下来我们为我们git仓库添加一个<code>pre-commit</code>钩子,运行</p><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">npx</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">husky</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">add</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">.husky/pre-commit</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">npx --no-install lint-staged</span><span style="color:#89DDFF;">&quot;</span></span></code></pre></div><p>这回在我们的.husky目录下生成一个<code>pre-commit</code>的脚本</p><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">#!/usr/bin/env sh</span></span>
<span class="line"><span style="color:#82AAFF;">.</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;$(</span><span style="color:#FFCB6B;">dirname</span><span style="color:#C3E88D;"> -- </span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;font-style:italic;">$0</span><span style="color:#89DDFF;">&quot;)</span><span style="color:#C3E88D;">/_/husky.sh</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># commit之前触发</span></span>
<span class="line"><span style="color:#FFCB6B;">npx</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--no-install</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">lint-staged</span></span></code></pre></div><p>接下来我们配置<code>lint-staged</code>,在<code>package.json</code>中添加下面的配置信息。</p><div class="language-json"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">lint-staged</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">: </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">*.{js,vue,ts,jsx,tsx}</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">[</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">prettier --write</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">eslint --fix</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#89DDFF;">],</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">*.{html,css,less,scss,md}</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">[</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">prettier --write</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#89DDFF;">]</span></span>
<span class="line"><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">,</span></span></code></pre></div><p>这样之后，我们后续提交到暂存区的代码也就会被<code>eslint+prettier</code>格式化和检查，进一步保证我们的代码规范。</p><h3 id="测试" tabindex="-1">测试 <a class="header-anchor" href="#测试" aria-label="Permalink to &quot;测试&quot;">​</a></h3><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">git</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">add</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">.</span></span>
<span class="line"><span style="color:#FFCB6B;">git</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">commit</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-m</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">测试eslint报错是否可以提交</span><span style="color:#89DDFF;">&#39;</span></span></code></pre></div><p>可以发现无法提交(使用<code>git status</code> 查看状态)</p><p>使用<code>yarn format</code>格式化后就可以提交了</p><h2 id="commitlint规范" tabindex="-1">commitlint规范 <a class="header-anchor" href="#commitlint规范" aria-label="Permalink to &quot;commitlint规范&quot;">​</a></h2><p>在实际开发中，我们的代码提交常常是比较潦草的，可能有时候只会写个简单的修复，这样的提交信息虽然开发中省时省力，但在代码回顾、维护时，常常需要提交信息才能更好理解代码的作用，因此代码提交信息的规范化其实是前端代码规范中的重要一环，而<code>commitlint</code>是一个帮我们检查commit msg是否符合规范的工具。 <a href="https://link.juejin.cn?target=https%3A%2F%2Fgithub.com%2Fconventional-changelog%2Fcommitlint" target="_blank" rel="noreferrer">commitlint仓库地址：https://github.com/conventional-changelog/commitlint</a></p><h4 id="安装commitlint" tabindex="-1">安装<code>commitlint</code> <a class="header-anchor" href="#安装commitlint" aria-label="Permalink to &quot;安装\`commitlint\`&quot;">​</a></h4><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">yarn</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">add</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">@commitlint/{config-conventional,cli}</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-D</span></span></code></pre></div><h4 id="创建配置文件-echo创建记得将编码改为utf-8" tabindex="-1">创建配置文件（<code>echo</code>创建记得将编码改为<code>utf-8</code>） <a class="header-anchor" href="#创建配置文件-echo创建记得将编码改为utf-8" aria-label="Permalink to &quot;创建配置文件（\`echo\`创建记得将编码改为\`utf-8\`）&quot;">​</a></h4><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#82AAFF;">echo</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">module.exports = {extends: [&#39;@commitlint/config-conventional&#39;]}</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">commitlint.config.js</span></span></code></pre></div><h4 id="配置husky-hook" tabindex="-1">配置husky hook <a class="header-anchor" href="#配置husky-hook" aria-label="Permalink to &quot;配置husky hook&quot;">​</a></h4><p>在package.json的husky hook配置中添加 <code>&quot;commit-msg&quot;: &quot;commitlint -E HUSKY_GIT_PARAMS&quot;</code></p><div class="language-json"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">husky</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">: </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">hooks</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">pre-commit</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">lint-staged</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">commit-msg</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">commitlint -E HUSKY_GIT_PARAMS</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">,</span></span></code></pre></div><h4 id="在-husky文件夹下生成commit-msghook" tabindex="-1">在.husky文件夹下生成<code>commit-msg</code>hook <a class="header-anchor" href="#在-husky文件夹下生成commit-msghook" aria-label="Permalink to &quot;在.husky文件夹下生成\`commit-msg\`hook&quot;">​</a></h4><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">npx</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">husky</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">add</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">.husky/commit-msg</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">npx --no-install commitlint --edit $1</span><span style="color:#89DDFF;">&#39;</span></span></code></pre></div><h4 id="测试-1" tabindex="-1">测试 <a class="header-anchor" href="#测试-1" aria-label="Permalink to &quot;测试&quot;">​</a></h4><p>如果commit msg为ci不规范消息则在commit时会报错，如果使用ci: add commitlint\`将会提交成功。</p><img src="`+c+'" alt="image-20221002213052571" style="zoom:50%;"><img src="'+r+`" alt="image-20221002213145063" style="zoom:50%;"><h4 id="commitlint规范-1" tabindex="-1">commitlint规范 <a class="header-anchor" href="#commitlint规范-1" aria-label="Permalink to &quot;commitlint规范&quot;">​</a></h4><p><a href="https://link.juejin.cn/?target=https%3A%2F%2Fgithub.com%2Fconventional-changelog%2Fcommitlint%2Ftree%2Fmaster%2F%40commitlint%2Fconfig-conventional" target="_blank" rel="noreferrer">commitlint规范文档地址</a></p><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">git</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">commit</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-m</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">fix: 修复xxx的bug</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FFCB6B;">git</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">commit</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-m</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">ci: 搭建基础配置</span><span style="color:#89DDFF;">&#39;</span></span></code></pre></div>`,115),y=[D];function F(C,d,A,u,h,m){return n(),a("div",null,y)}const b=s(i,[["render",F]]);export{q as __pageData,b as default};
