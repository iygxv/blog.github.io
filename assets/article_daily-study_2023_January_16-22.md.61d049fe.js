import{_ as s,c as a,o as l,N as n}from"./chunks/framework.7288ae32.js";const A=JSON.parse('{"title":"2023/1/16 - 2023/1/22周","description":"","frontmatter":{},"headers":[],"relativePath":"article/daily-study/2023/January/16-22.md"}'),p={name:"article/daily-study/2023/January/16-22.md"},o=n(`<h1 id="_2023-1-16-2023-1-22周" tabindex="-1">2023/1/16 - 2023/1/22周 <a class="header-anchor" href="#_2023-1-16-2023-1-22周" aria-label="Permalink to &quot;2023/1/16 - 2023/1/22周&quot;">​</a></h1><h2 id="_2023-1-16" tabindex="-1">2023/1/16 <a class="header-anchor" href="#_2023-1-16" aria-label="Permalink to &quot;2023/1/16&quot;">​</a></h2><h3 id="vue3-编译原理学习" tabindex="-1">vue3 编译原理学习 <a class="header-anchor" href="#vue3-编译原理学习" aria-label="Permalink to &quot;vue3 编译原理学习&quot;">​</a></h3><p>浅浅的学习一下编译原理, 并且跟写 <a href="https://github.com/iygxv/vue3_dev_v2" target="_blank" rel="noreferrer">vue3编译原理</a></p><p>今天写了解析文本的ast</p><h2 id="_2023-1-17" tabindex="-1">2023/1/17 <a class="header-anchor" href="#_2023-1-17" aria-label="Permalink to &quot;2023/1/17&quot;">​</a></h2><ul><li>无</li></ul><h2 id="_2023-1-18" tabindex="-1">2023/1/18 <a class="header-anchor" href="#_2023-1-18" aria-label="Permalink to &quot;2023/1/18&quot;">​</a></h2><ul><li>无</li></ul><h2 id="_2023-1-19" tabindex="-1">2023/1/19 <a class="header-anchor" href="#_2023-1-19" aria-label="Permalink to &quot;2023/1/19&quot;">​</a></h2><ul><li>学习了下部署后如何通知用户刷新</li></ul><h3 id="部署后如何通知用户刷新" tabindex="-1">部署后如何通知用户刷新 <a class="header-anchor" href="#部署后如何通知用户刷新" aria-label="Permalink to &quot;部署后如何通知用户刷新&quot;">​</a></h3><p><a href="https://mp.weixin.qq.com/s/BwkzAMX4NO3vk7b_eI3MWw" target="_blank" rel="noreferrer">文章链接</a></p><p><a href="https://mp.weixin.qq.com/s/BwkzAMX4NO3vk7b_eI3MWw" target="_blank" rel="noreferrer">文章链接</a></p><p>文章中提到了俩种方法</p><ul><li><p>写一个json文件, 第一次拿到数据存起来, 轮询判断json存储的时间是否有修改, 如果有修改,则提醒用户</p><ul><li>缺点: 手动修改,麻烦</li></ul></li><li><p>判断script中js脚本名称, 因为打包后的js脚本名称生成不一样的hash值</p><p>例如:</p><div class="language-html"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">script</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">src</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">./asstes/index.esma_0790.js</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;&lt;/</span><span style="color:#F07178;">script</span><span style="color:#89DDFF;">&gt;</span></span></code></pre></div><p>使用轮询去判断这个hash值是否发生变化</p></li></ul><h2 id="_2023-1-20" tabindex="-1">2023/1/20 <a class="header-anchor" href="#_2023-1-20" aria-label="Permalink to &quot;2023/1/20&quot;">​</a></h2><ul><li><p>元素 和 表达式转换成ast</p><p><a href="https://github.com/iygxv/vue3_dev_v2/blob/main/packages/compiler-dom/src/parse.ts" target="_blank" rel="noreferrer">查看如何转换</a></p></li><li><p>数据中在循环中对于删除元素的处理</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">// 例如: </span></span>
<span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> arr </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> [</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">2</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">3</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">4</span><span style="color:#A6ACCD;">]</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">for</span><span style="color:#A6ACCD;">(</span><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> i </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> i </span><span style="color:#89DDFF;">&lt;</span><span style="color:#A6ACCD;"> arr</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">length</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> i</span><span style="color:#89DDFF;">++</span><span style="color:#A6ACCD;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">i</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">1</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#A6ACCD;">arr</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">splice</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">i</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">1</span><span style="color:#F07178;">) </span><span style="color:#676E95;font-style:italic;">// 因为删除, 改变了数组, 所以需要i--</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#A6ACCD;">i</span><span style="color:#89DDFF;">--</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">i</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div></li><li><p>函数中返回函数, 然后放到数组中, 我们可以控制函数的先后执行</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">// 例如: </span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> fn1 </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">()</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">执行11</span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> fn2 </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">()</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">执行22</span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> fnArr </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> []</span></span>
<span class="line"><span style="color:#A6ACCD;">fnArr</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">push</span><span style="color:#A6ACCD;">(</span><span style="color:#82AAFF;">fn1</span><span style="color:#A6ACCD;">()</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">fn2</span><span style="color:#A6ACCD;">())</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">for</span><span style="color:#A6ACCD;">(</span><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> i </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> fnArr</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">length </span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> i </span><span style="color:#89DDFF;">&gt;=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> i</span><span style="color:#89DDFF;">--</span><span style="color:#A6ACCD;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#A6ACCD;">fnArr</span><span style="color:#F07178;">[</span><span style="color:#A6ACCD;">i</span><span style="color:#F07178;">]()</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 执行22</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 执行11</span></span></code></pre></div></li><li><p>arr.filter(Boolean) 因为Boolean是一个函数, 所以上面的写法等于</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">arr</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">filter</span><span style="color:#A6ACCD;">(</span><span style="color:#A6ACCD;font-style:italic;">item</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Boolean</span><span style="color:#A6ACCD;">(item))</span></span></code></pre></div></li><li><p>正则匹配ff exec 和 test</p><ul><li><p>exec</p><p><a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/RegExp/exec" target="_blank" rel="noreferrer">MDN描述</a></p><p><strong><code>exec()</code></strong> 方法在一个指定字符串中执行一个搜索匹配。返回一个结果数组或 <a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Operators/null" target="_blank" rel="noreferrer"><code>null</code></a></p></li><li><p>test</p><p><a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/RegExp/test" target="_blank" rel="noreferrer">MDN描述</a></p><p><strong><code>test()</code></strong> 方法执行一个检索，用来查看正则表达式与指定的字符串是否匹配。返回 <code>true</code> 或 <code>false</code></p></li></ul></li></ul><h2 id="_2023-1-21" tabindex="-1">2023/1/21 <a class="header-anchor" href="#_2023-1-21" aria-label="Permalink to &quot;2023/1/21&quot;">​</a></h2><ul><li>无</li></ul><h2 id="_2023-1-22" tabindex="-1">2023/1/22 <a class="header-anchor" href="#_2023-1-22" aria-label="Permalink to &quot;2023/1/22&quot;">​</a></h2><ul><li>无</li></ul>`,22),e=[o];function t(r,c,y,i,F,D){return l(),a("div",null,e)}const h=s(p,[["render",t]]);export{A as __pageData,h as default};
