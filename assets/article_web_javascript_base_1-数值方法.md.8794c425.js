import{_ as s,c as a,o as n,a as l}from"./app.472a3350.js";const F=JSON.parse('{"title":"数值方法","description":"","frontmatter":{},"headers":[{"level":2,"title":"转换数字4种方法","slug":"转换数字4种方法","link":"#转换数字4种方法","children":[{"level":3,"title":"Number()","slug":"number","link":"#number","children":[]},{"level":3,"title":"parseInt()","slug":"parseint","link":"#parseint","children":[]},{"level":3,"title":"parseFloat()","slug":"parsefloat","link":"#parsefloat","children":[]},{"level":3,"title":"+字符串数字","slug":"字符串数字","link":"#字符串数字","children":[]}]},{"level":2,"title":"Number.isInteger()","slug":"number-isinteger","link":"#number-isinteger","children":[]},{"level":2,"title":"Math.ceil()  Math.floor()  Math.round()","slug":"math-ceil-math-floor-math-round","link":"#math-ceil-math-floor-math-round","children":[]},{"level":2,"title":"Math.trunc()","slug":"math-trunc","link":"#math-trunc","children":[]},{"level":2,"title":"Math.sign()","slug":"math-sign","link":"#math-sign","children":[]},{"level":2,"title":"不常用的方法","slug":"不常用的方法","link":"#不常用的方法","children":[]}],"relativePath":"article/web/javascript/base/1-数值方法.md"}'),p={name:"article/web/javascript/base/1-数值方法.md"},o=l(`<h1 id="数值方法" tabindex="-1">数值方法 <a class="header-anchor" href="#数值方法" aria-hidden="true">#</a></h1><p>转换为number的4种方法： Number()、parseInt()、parseFloat()、+字符串数字</p><h2 id="转换数字4种方法" tabindex="-1">转换数字4种方法 <a class="header-anchor" href="#转换数字4种方法" aria-hidden="true">#</a></h2><h3 id="number" tabindex="-1">Number() <a class="header-anchor" href="#number" aria-hidden="true">#</a></h3><p>Number()是转型函数，可用于任何数据类型，有一下几种情况</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#A6ACCD;">1</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">布尔值，</span><span style="color:#FF9CAC;">true</span><span style="color:#A6ACCD;"> 转换为 </span><span style="color:#F78C6C;">1</span><span style="color:#A6ACCD;">，</span><span style="color:#FF9CAC;">false</span><span style="color:#A6ACCD;"> 转换为 </span><span style="color:#F78C6C;">0</span></span>
<span class="line"><span style="color:#82AAFF;">Number</span><span style="color:#A6ACCD;">(</span><span style="color:#FF9CAC;">true</span><span style="color:#A6ACCD;">) </span><span style="color:#676E95;font-style:italic;">// 1</span></span>
<span class="line"><span style="color:#82AAFF;">Number</span><span style="color:#A6ACCD;">(</span><span style="color:#FF9CAC;">false</span><span style="color:#A6ACCD;">) </span><span style="color:#676E95;font-style:italic;">// 0</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">2</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">数值，直接返回</span></span>
<span class="line"><span style="color:#82AAFF;">Number</span><span style="color:#A6ACCD;">(</span><span style="color:#F78C6C;">1</span><span style="color:#A6ACCD;">) </span><span style="color:#676E95;font-style:italic;">// 1</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F78C6C;">3.</span><span style="color:#C792EA;">n</span><span style="color:#A6ACCD;">ull，返回 </span><span style="color:#F78C6C;">0</span></span>
<span class="line"><span style="color:#82AAFF;">Number</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">null</span><span style="color:#A6ACCD;">) </span><span style="color:#676E95;font-style:italic;">// 0</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">4</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">undefined，返回 </span><span style="color:#89DDFF;">NaN</span></span>
<span class="line"><span style="color:#82AAFF;">Number</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">undefined</span><span style="color:#A6ACCD;">) </span><span style="color:#676E95;font-style:italic;">// NaN</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">5</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">函数，结果都是NaN</span></span>
<span class="line"><span style="color:#82AAFF;">Number</span><span style="color:#A6ACCD;">(</span><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">a</span><span style="color:#89DDFF;">(){}</span><span style="color:#A6ACCD;">) </span><span style="color:#676E95;font-style:italic;">// NaN</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">6</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">symbol类型，不能将symbol类型转数字</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;">否则报错</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">7</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">字符串</span></span>
<span class="line"><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;"> 数值字符</span></span>
<span class="line"><span style="color:#82AAFF;">Number</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">123</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">)  </span><span style="color:#676E95;font-style:italic;">// 123</span></span>
<span class="line"><span style="color:#82AAFF;">Number</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">011</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">)  </span><span style="color:#676E95;font-style:italic;">// 11  // 会忽略前面的零</span></span>
<span class="line"><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;"> 浮点值格式 转换为相应的浮点值（同样，忽略前面的零）</span></span>
<span class="line"><span style="color:#82AAFF;">Number</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">12.3</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">) </span><span style="color:#676E95;font-style:italic;">// 12.3	</span></span>
<span class="line"><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;"> 十六进制格式 转换十进制整数值</span></span>
<span class="line"><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;"> 空字符串 返回0</span></span>
<span class="line"><span style="color:#82AAFF;">Number</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;&#39;</span><span style="color:#A6ACCD;">) </span><span style="color:#676E95;font-style:italic;">// 0</span></span>
<span class="line"><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;"> 其他字符 返回 </span><span style="color:#89DDFF;">NaN</span></span>
<span class="line"><span style="color:#82AAFF;">Number</span><span style="color:#A6ACCD;">(12K) </span><span style="color:#676E95;font-style:italic;">// NaN</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">8</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">对象</span></span>
<span class="line"><span style="color:#82AAFF;">会先调用valueOf</span><span style="color:#A6ACCD;">()方法 ，如果如果转换结果是 </span><span style="color:#89DDFF;">NaN</span><span style="color:#A6ACCD;">，</span><span style="color:#82AAFF;">则调用toString</span><span style="color:#A6ACCD;">()方法，再按照转换字符串的规则转换</span></span>
<span class="line"></span></code></pre></div><h3 id="parseint" tabindex="-1">parseInt() <a class="header-anchor" href="#parseint" aria-hidden="true">#</a></h3><p>parseInt()方法主要用于将字符串转换为数值</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#A6ACCD;">如何转换？</span></span>
<span class="line"><span style="color:#A6ACCD;">1</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">先判断第一个字符是不是数值字符、加号或减号</span></span>
<span class="line"><span style="color:#A6ACCD;">不是，返回NaN</span></span>
<span class="line"><span style="color:#A6ACCD;">2</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">然后继续依次检测每个字符，直到字符串末尾，或碰到非数值字符</span></span>
<span class="line"><span style="color:#82AAFF;">parseInt</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">1234blue</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">)会被转换为 </span><span style="color:#F78C6C;">1234</span></span>
<span class="line"><span style="color:#A6ACCD;">3</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">接收第二个参数，用于指定底数（进制数）</span></span>
<span class="line"></span></code></pre></div><h3 id="parsefloat" tabindex="-1">parseFloat() <a class="header-anchor" href="#parsefloat" aria-hidden="true">#</a></h3><p>parseFloat()方法主要用于将字符串转换为数值</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#A6ACCD;">如何转换？</span></span>
<span class="line"><span style="color:#A6ACCD;">工作方式跟 </span><span style="color:#82AAFF;">parseInt</span><span style="color:#A6ACCD;">()函数类似</span></span>
<span class="line"><span style="color:#A6ACCD;">但需要注意的是</span></span>
<span class="line"><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;"> 第一次出现的小数点是有效的，但第二次出现的小数点就无效</span></span>
<span class="line"><span style="color:#A6ACCD;">例如： </span><span style="color:#82AAFF;">parseFloat</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">22.34.5</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">)将转换成 </span><span style="color:#F78C6C;">22.34</span></span>
<span class="line"><span style="color:#A6ACCD;">特别注意</span></span>
<span class="line"><span style="color:#A6ACCD;">1</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">parseFloat</span><span style="color:#A6ACCD;">()只解析十进制值，因此不能指定底数</span></span>
<span class="line"><span style="color:#A6ACCD;">2</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">十六进制数值始终会返回 </span><span style="color:#F78C6C;">0</span><span style="color:#A6ACCD;">。</span></span>
<span class="line"><span style="color:#A6ACCD;">3</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">字符串表示整数（没有小数点或者小数点后面只有一个零），则 </span><span style="color:#82AAFF;">parseFloat</span><span style="color:#A6ACCD;">()返回整数</span></span>
<span class="line"><span style="color:#82AAFF;">parseFloat</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">1.0</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)  </span><span style="color:#676E95;font-style:italic;">//1</span></span>
<span class="line"></span></code></pre></div><h3 id="字符串数字" tabindex="-1">+字符串数字 <a class="header-anchor" href="#字符串数字" aria-hidden="true">#</a></h3><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#89DDFF;">+</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">5</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// 5</span></span>
<span class="line"></span></code></pre></div><p><strong>小知识</strong></p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#A6ACCD;">1</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">保留小数点后N位</span></span>
<span class="line"><span style="color:#A6ACCD;">数字</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">toFixed</span><span style="color:#A6ACCD;">(N)</span></span>
<span class="line"><span style="color:#A6ACCD;">2</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">要确定一个值是不是有限大</span></span>
<span class="line"><span style="color:#82AAFF;">isFinite</span><span style="color:#A6ACCD;">()函数</span></span>
<span class="line"><span style="color:#A6ACCD;">3</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">判断NaN number</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">isNaN</span><span style="color:#A6ACCD;">()</span></span>
<span class="line"></span></code></pre></div><h2 id="number-isinteger" tabindex="-1">Number.isInteger() <a class="header-anchor" href="#number-isinteger" aria-hidden="true">#</a></h2><p><strong>Number.isInteger()</strong> 用来判断一个数值是否为整数。返回true false</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">//JavaScript 内部，整数和浮点数采用的是同样的储存方法，所以 11 和 11.0 被视为同一个值。</span></span>
<span class="line"><span style="color:#A6ACCD;">Number</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">isInteger</span><span style="color:#A6ACCD;">(</span><span style="color:#F78C6C;">11</span><span style="color:#A6ACCD;">)  </span><span style="color:#676E95;font-style:italic;">//true</span></span>
<span class="line"><span style="color:#A6ACCD;">Number</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">isInteger</span><span style="color:#A6ACCD;">(</span><span style="color:#F78C6C;">11.0</span><span style="color:#A6ACCD;">)   </span><span style="color:#676E95;font-style:italic;">//true</span></span>
<span class="line"><span style="color:#A6ACCD;">Number</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">isInteger</span><span style="color:#A6ACCD;">(</span><span style="color:#F78C6C;">11.11</span><span style="color:#A6ACCD;">)   </span><span style="color:#676E95;font-style:italic;">//false</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">//如果参数不是数值，Number.isInteger返回false。</span></span>
<span class="line"><span style="color:#A6ACCD;">Number</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">isInteger</span><span style="color:#A6ACCD;">() </span><span style="color:#676E95;font-style:italic;">// false</span></span>
<span class="line"><span style="color:#A6ACCD;">Number</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">isInteger</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">null</span><span style="color:#A6ACCD;">) </span><span style="color:#676E95;font-style:italic;">// false</span></span>
<span class="line"><span style="color:#A6ACCD;">Number</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">isInteger</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">15</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">) </span><span style="color:#676E95;font-style:italic;">// false</span></span>
<span class="line"><span style="color:#A6ACCD;">Number</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">isInteger</span><span style="color:#A6ACCD;">(</span><span style="color:#FF9CAC;">true</span><span style="color:#A6ACCD;">) </span><span style="color:#676E95;font-style:italic;">// false</span></span>
<span class="line"></span></code></pre></div><h2 id="math-ceil-math-floor-math-round" tabindex="-1">Math.ceil() Math.floor() Math.round() <a class="header-anchor" href="#math-ceil-math-floor-math-round" aria-hidden="true">#</a></h2><p><strong>Math.ceil()</strong> 返回大于或等于一个给定数字的最小整数(向上取整)</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#A6ACCD;">Math</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">ceil</span><span style="color:#A6ACCD;">(</span><span style="color:#F78C6C;">11.11</span><span style="color:#A6ACCD;">)  </span><span style="color:#676E95;font-style:italic;">//12   上舍入</span></span>
<span class="line"></span></code></pre></div><p><strong>Math.floor()</strong> 返回小于或等于一个给定数字的最大整数(向下取整)</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#A6ACCD;">Math</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">floor</span><span style="color:#A6ACCD;">(</span><span style="color:#F78C6C;">11.999</span><span style="color:#A6ACCD;">)  </span><span style="color:#676E95;font-style:italic;">//11   下舍入</span></span>
<span class="line"></span></code></pre></div><p><strong>Math.round()</strong> 返回一个数字四舍五入后最接近的整数</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#A6ACCD;">Math</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">round</span><span style="color:#A6ACCD;">(</span><span style="color:#F78C6C;">11.6</span><span style="color:#A6ACCD;">)  </span><span style="color:#676E95;font-style:italic;">//12  四舍五入</span></span>
<span class="line"></span></code></pre></div><h2 id="math-trunc" tabindex="-1">Math.trunc() <a class="header-anchor" href="#math-trunc" aria-hidden="true">#</a></h2><p>Math.trunc() 用于去除一个数的小数部分，返回整数部分。</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#A6ACCD;">Math</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">trunc</span><span style="color:#A6ACCD;">(</span><span style="color:#F78C6C;">4.1</span><span style="color:#A6ACCD;">)    </span><span style="color:#676E95;font-style:italic;">//4</span></span>
<span class="line"><span style="color:#A6ACCD;">Math</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">trunc</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">-</span><span style="color:#F78C6C;">4.9</span><span style="color:#A6ACCD;">)   </span><span style="color:#676E95;font-style:italic;">//-4</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">//对于非数值，Math.trunc内部使用Number方法将其先转为数值。</span></span>
<span class="line"><span style="color:#A6ACCD;">Math</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">trunc</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">123.456</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">) </span><span style="color:#676E95;font-style:italic;">// 123</span></span>
<span class="line"><span style="color:#A6ACCD;">Math</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">trunc</span><span style="color:#A6ACCD;">(</span><span style="color:#FF9CAC;">true</span><span style="color:#A6ACCD;">) </span><span style="color:#676E95;font-style:italic;">//1</span></span>
<span class="line"><span style="color:#A6ACCD;">Math</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">trunc</span><span style="color:#A6ACCD;">(</span><span style="color:#FF9CAC;">false</span><span style="color:#A6ACCD;">) </span><span style="color:#676E95;font-style:italic;">// 0</span></span>
<span class="line"><span style="color:#A6ACCD;">Math</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">trunc</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">null</span><span style="color:#A6ACCD;">) </span><span style="color:#676E95;font-style:italic;">// 0</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">//对于空值和无法截取整数的值，返回NaN。</span></span>
<span class="line"><span style="color:#A6ACCD;">Math</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">trunc</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">NaN</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;">      </span><span style="color:#676E95;font-style:italic;">// NaN</span></span>
<span class="line"><span style="color:#A6ACCD;">Math</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">trunc</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">foo</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;">    </span><span style="color:#676E95;font-style:italic;">// NaN</span></span>
<span class="line"><span style="color:#A6ACCD;">Math</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">trunc</span><span style="color:#A6ACCD;">()</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;">         </span><span style="color:#676E95;font-style:italic;">// NaN</span></span>
<span class="line"><span style="color:#A6ACCD;">Math</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">trunc</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">undefined</span><span style="color:#A6ACCD;">) </span><span style="color:#676E95;font-style:italic;">// NaN</span></span>
<span class="line"></span></code></pre></div><h2 id="math-sign" tabindex="-1">Math.sign() <a class="header-anchor" href="#math-sign" aria-hidden="true">#</a></h2><p>Math.sign() 方法用来判断一个数到底是正数、负数、还是零。对于非数值，会先将其转换为数值。</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">//五种值</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">//正数，返回+1</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">//负数，返回-1</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">//0  返回0</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">//-0 返回-0</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">//其它值 返回NaN</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">Math</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">sign</span><span style="color:#A6ACCD;">(</span><span style="color:#F78C6C;">6</span><span style="color:#A6ACCD;">)  </span><span style="color:#676E95;font-style:italic;">//1</span></span>
<span class="line"><span style="color:#A6ACCD;">Math</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">sign</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">-</span><span style="color:#F78C6C;">6</span><span style="color:#A6ACCD;">)   </span><span style="color:#676E95;font-style:italic;">//-1</span></span>
<span class="line"><span style="color:#A6ACCD;">Math</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">sign</span><span style="color:#A6ACCD;">(</span><span style="color:#F78C6C;">0</span><span style="color:#A6ACCD;">)   </span><span style="color:#676E95;font-style:italic;">//0</span></span>
<span class="line"><span style="color:#A6ACCD;">Math</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">sign</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">abc</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)  </span><span style="color:#676E95;font-style:italic;">//NaN</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">//如果参数是非数值，会自动转为数值。对于那些无法转为数值的值，会返回NaN。</span></span>
<span class="line"><span style="color:#A6ACCD;">Math</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">sign</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;&#39;</span><span style="color:#A6ACCD;">)  </span><span style="color:#676E95;font-style:italic;">// 0</span></span>
<span class="line"><span style="color:#A6ACCD;">Math</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">sign</span><span style="color:#A6ACCD;">(</span><span style="color:#FF9CAC;">true</span><span style="color:#A6ACCD;">)  </span><span style="color:#676E95;font-style:italic;">// +1</span></span>
<span class="line"><span style="color:#A6ACCD;">Math</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">sign</span><span style="color:#A6ACCD;">(</span><span style="color:#FF9CAC;">false</span><span style="color:#A6ACCD;">)  </span><span style="color:#676E95;font-style:italic;">// 0</span></span>
<span class="line"><span style="color:#A6ACCD;">Math</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">sign</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">null</span><span style="color:#A6ACCD;">)  </span><span style="color:#676E95;font-style:italic;">// 0</span></span>
<span class="line"><span style="color:#A6ACCD;">Math</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">sign</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">9</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)  </span><span style="color:#676E95;font-style:italic;">// +1</span></span>
<span class="line"><span style="color:#A6ACCD;">Math</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">sign</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">foo</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)  </span><span style="color:#676E95;font-style:italic;">// NaN</span></span>
<span class="line"><span style="color:#A6ACCD;">Math</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">sign</span><span style="color:#A6ACCD;">()  </span><span style="color:#676E95;font-style:italic;">// NaN</span></span>
<span class="line"><span style="color:#A6ACCD;">Math</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">sign</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">undefined</span><span style="color:#A6ACCD;">)  </span><span style="color:#676E95;font-style:italic;">// NaN</span></span>
<span class="line"></span></code></pre></div><h2 id="不常用的方法" tabindex="-1">不常用的方法 <a class="header-anchor" href="#不常用的方法" aria-hidden="true">#</a></h2><p><a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Number/isFinite" target="_blank" rel="noreferrer"><code>Number.isFinite()</code></a> 确定传递的值类型及本身是否是有限数。</p><p><a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Number/isSafeInteger" target="_blank" rel="noreferrer"><code>Number.isSafeInteger()</code></a> 确定传递的值是否为安全整数 ( -<code>(253 - 1)</code> 至 <code>253 - 1之间</code>)。</p>`,35),e=[o];function t(c,r,y,A,C,i){return n(),a("div",null,e)}const h=s(p,[["render",t]]);export{F as __pageData,h as default};
