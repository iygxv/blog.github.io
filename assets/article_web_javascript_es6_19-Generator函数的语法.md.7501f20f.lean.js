import{_ as s,c as n,o as a,a as l}from"./app.472a3350.js";const C=JSON.parse('{"title":"Generator 函数的语法","description":"","frontmatter":{},"headers":[{"level":2,"title":"简介","slug":"简介","link":"#简介","children":[{"level":3,"title":"基本概念","slug":"基本概念","link":"#基本概念","children":[]},{"level":3,"title":"yield 表达式","slug":"yield-表达式","link":"#yield-表达式","children":[]},{"level":3,"title":"与 Iterator 接口的关系","slug":"与-iterator-接口的关系","link":"#与-iterator-接口的关系","children":[]}]},{"level":2,"title":"next 方法的参数","slug":"next-方法的参数","link":"#next-方法的参数","children":[]},{"level":2,"title":"for...of 循环","slug":"for-of-循环","link":"#for-of-循环","children":[]},{"level":2,"title":"Generator.prototype.throw()","slug":"generator-prototype-throw","link":"#generator-prototype-throw","children":[]},{"level":2,"title":"Generator.prototype.return()","slug":"generator-prototype-return","link":"#generator-prototype-return","children":[]},{"level":2,"title":"next()、throw()、return() 的共同点","slug":"next-、throw-、return-的共同点","link":"#next-、throw-、return-的共同点","children":[]},{"level":2,"title":"yield* 表达式","slug":"yield-表达式-1","link":"#yield-表达式-1","children":[]},{"level":2,"title":"作为对象属性的 Generator 函数","slug":"作为对象属性的-generator-函数","link":"#作为对象属性的-generator-函数","children":[]},{"level":2,"title":"Generator 函数的this","slug":"generator-函数的this","link":"#generator-函数的this","children":[]},{"level":2,"title":"含义","slug":"含义","link":"#含义","children":[{"level":3,"title":"Generator 与状态机","slug":"generator-与状态机","link":"#generator-与状态机","children":[]},{"level":3,"title":"Generator 与协程","slug":"generator-与协程","link":"#generator-与协程","children":[]},{"level":3,"title":"Generator 与上下文","slug":"generator-与上下文","link":"#generator-与上下文","children":[]}]},{"level":2,"title":"应用","slug":"应用","link":"#应用","children":[{"level":3,"title":"（1）异步操作的同步化表达","slug":"_1-异步操作的同步化表达","link":"#_1-异步操作的同步化表达","children":[]},{"level":3,"title":"（2）控制流管理","slug":"_2-控制流管理","link":"#_2-控制流管理","children":[]},{"level":3,"title":"（3）部署 Iterator 接口","slug":"_3-部署-iterator-接口","link":"#_3-部署-iterator-接口","children":[]},{"level":3,"title":"（4）作为数据结构","slug":"_4-作为数据结构","link":"#_4-作为数据结构","children":[]}]}],"relativePath":"article/web/javascript/es6/19-Generator函数的语法.md"}'),p={name:"article/web/javascript/es6/19-Generator函数的语法.md"},o=l("",259),e=[o];function t(c,r,y,F,D,i){return a(),n("div",null,e)}const d=s(p,[["render",t]]);export{C as __pageData,d as default};
